% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HaltonFrames.R
\name{HaltonFrame}
\alias{HaltonFrame}
\title{Generate a Halton Frame.}
\usage{
HaltonFrame(
  n = (bases[1]^J[1]) * (bases[2]^J[2]),
  J = base::c(3, 2),
  bases = base::c(2, 3),
  shapefile = NULL,
  panels = NULL,
  panel_overlap = NULL,
  randomStart = FALSE,
  seeds = NULL,
  stratum = NULL
)
}
\arguments{
\item{n}{The number of points in the frame to generate.}

\item{J}{The number of grid cells. A list of 2 values. The default value is c(3, 2), we could also use c(5, 3).}

\item{bases}{Co-prime base for the Halton Sequence. The default value is c(2, 3).}

\item{shapefile}{A sf object. If the shapefile parameter is NULL then function
uc511::HaltonFrameBase is called directly.}

\item{panels}{A list of integers that define the size of each panel in a
non-overlapping panels design. The length of the list determines the number of
panels required. The sum of the integers in the panels parameter will determine
the total number of samples selected, n. The default value for panels is NULL,
this indicates that a non-overlapping panel design is not wanted.}

\item{panel_overlap}{A list of integers that define the overlap into the previous
panel. Is only used when the panels parameter is not NULL. The default value for
panel_overlap is NULL. The length of panel_overlap must be equal to the length
of panels. The first value is always forced to zero as the first panel never
overlaps any region.}

\item{randomStart}{Whether a spatially balanced sample will be randomly drawn from
the frame or not. Default value is FALSE.}

\item{seeds}{A list of 2 seeds, u1 and u2. If not specified, default is NULL.}

\item{stratum}{Name of column in shapefile that makes up the strata.}
}
\value{
A list containing the following variables:
- halton_seq
- halton_seq_div
- Z
- halton_frame
- J
- sample
- pts.shp
- bb
}
\description{
A description of this useful function.
}
\details{
This function was written by Phil Davies.
}
\examples{
\dontrun{
hf_ <- uc511::HaltonFrame()
}

}
