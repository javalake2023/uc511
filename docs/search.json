[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 uc511 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Phil Davies. Author, maintainer. Blair Robertson. Author. Paul van Dam-Bates. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Davies P, Robertson B, van Dam-Bates P (2023). uc511: Implements Number Balanced Sampling Algorithms. R package version 0.1.0.","code":"@Manual{,   title = {uc511: Implements a Number of Balanced Sampling Algorithms},   author = {Phil Davies and Blair Robertson and Paul {van Dam-Bates}},   year = {2023},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"uc511","dir":"","previous_headings":"","what":"Implements a Number of Balanced Sampling Algorithms","title":"Implements a Number of Balanced Sampling Algorithms","text":"Repository hold R package uc511. package encapsulate number balanced sampling algorithms, namely, BAS (equal, unequal, seed point, panels), Halton frames (discretizing continuous resource), HIP (equal probability), Spatial balance measures (Voronoi Modified Moran’s ), Variance estimators (local mean, nearest neighbour quasi bootstrap), DAS Spatial stratification algorithm. **** work progress everything subject change without notice.","code":""},{"path":"/reference/BAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Do something useful. — BAS","title":"Do something useful. — BAS","text":"description useful function.","code":""},{"path":"/reference/BAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do something useful. — BAS","text":"","code":"BAS(parm1)"},{"path":"/reference/BAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do something useful. — BAS","text":"parm1 parameter.","code":""},{"path":"/reference/BAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do something useful. — BAS","text":"something useful.","code":""},{"path":"/reference/BASMastersample.html","id":null,"dir":"Reference","previous_headings":"","what":"BASMastersample.R\nDo something useful. — BASMastersample","title":"BASMastersample.R\nDo something useful. — BASMastersample","text":"description useful function.","code":""},{"path":"/reference/BASMastersample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BASMastersample.R\nDo something useful. — BASMastersample","text":"","code":"BASMastersample(parm1)"},{"path":"/reference/BASMastersample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BASMastersample.R\nDo something useful. — BASMastersample","text":"parm1 parameter.","code":""},{"path":"/reference/BASMastersample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BASMastersample.R\nDo something useful. — BASMastersample","text":"something useful.","code":""},{"path":"/reference/BuildMS.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a new Master Sample with a random rotation and seed. — BuildMS","title":"Build a new Master Sample with a random rotation and seed. — BuildMS","text":"Randomly generate seed 10,000 possible values right now 2 dimensions. Note van Dam-Bates et al. (2018) required random seed falls main object shape, one islands New Zealand, within marine environment BC west coast. However, random rotation, able ignore detail. function used without random rotation, recommend running first master sample point indeed fall within largest scale master sample use.","code":""},{"path":"/reference/BuildMS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a new Master Sample with a random rotation and seed. — BuildMS","text":"","code":"buildMS(shp, d = 2, showOutput = TRUE, rotate = TRUE)"},{"path":"/reference/BuildMS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a new Master Sample with a random rotation and seed. — BuildMS","text":"shp Spatial feature defines boundary area define bounding box . d Dimension new Master Sample, stage work d=2. showOutput Print rotation random seed generated. rotate Boolean whether randomly rotate bounding box.","code":""},{"path":"/reference/BuildMS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a new Master Sample with a random rotation and seed. — BuildMS","text":"bounding box master sample.","code":""},{"path":"/reference/BuildMS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a new Master Sample with a random rotation and seed. — BuildMS","text":"","code":"if (FALSE) { data(NS_bioregion) bb <- uc511::buildMS(shp = NS_bioregion)         # Vertically aligned master sample bounding box. bb.rot <- uc511::rotate.shp(bb, bb, back = TRUE) # Actual bounding box. plot(sf::st_geometry(NS_bioregion)) plot(sf::st_geometry(bb.rot), add = TRUE) }"},{"path":"/reference/DAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Do something useful. — DAS","title":"Do something useful. — DAS","text":"description useful function.","code":""},{"path":"/reference/DAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do something useful. — DAS","text":"","code":"DAS(parm1)"},{"path":"/reference/DAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do something useful. — DAS","text":"parm1 parameter.","code":""},{"path":"/reference/DAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do something useful. — DAS","text":"something useful.","code":""},{"path":"/reference/GetBoxIndices.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast Implementation of finding x and y order numbers — GetBoxIndices","title":"Fast Implementation of finding x and y order numbers — GetBoxIndices","text":"Fast Implementation finding x y order numbers feed linear congruence equation. solves equation a_i HIP paper. essentially internal function worried .","code":""},{"path":"/reference/GetBoxIndices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast Implementation of finding x and y order numbers — GetBoxIndices","text":"","code":"GetBoxIndices(lxy, base, J)"},{"path":"/reference/GetBoxIndices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast Implementation of finding x and y order numbers — GetBoxIndices","text":"lxy Matrix lower x y coordinates Halton Box inside unit box. base Co-prime Base generally BAS work 2 3. J Integer 2 values represent numbers 2^J1, 3^J2.","code":""},{"path":"/reference/GetBoxIndices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast Implementation of finding x and y order numbers — GetBoxIndices","text":"matrix box indices","code":""},{"path":"/reference/HIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Do something useful. — HIP","title":"Do something useful. — HIP","text":"description useful function.","code":""},{"path":"/reference/HIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do something useful. — HIP","text":"","code":"HIP(parm1)"},{"path":"/reference/HIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do something useful. — HIP","text":"parm1 parameter.","code":""},{"path":"/reference/HIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do something useful. — HIP","text":"something useful.","code":""},{"path":"/reference/HaltonFrames.html","id":null,"dir":"Reference","previous_headings":"","what":"Do something useful. — HaltonFrames","title":"Do something useful. — HaltonFrames","text":"description useful function.","code":""},{"path":"/reference/HaltonFrames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do something useful. — HaltonFrames","text":"","code":"HaltonFrames(parm1)"},{"path":"/reference/HaltonFrames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do something useful. — HaltonFrames","text":"parm1 parameter.","code":""},{"path":"/reference/HaltonFrames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do something useful. — HaltonFrames","text":"something useful.","code":""},{"path":"/reference/SRS.html","id":null,"dir":"Reference","previous_headings":"","what":"Do something useful. — SRS","title":"Do something useful. — SRS","text":"description useful function.","code":""},{"path":"/reference/SRS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do something useful. — SRS","text":"","code":"SRS(parm1)"},{"path":"/reference/SRS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do something useful. — SRS","text":"parm1 parameter.","code":""},{"path":"/reference/SRS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do something useful. — SRS","text":"something useful.","code":""},{"path":"/reference/SolveCongruence.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve system of linear congruence from HIP paper to order HIP boxes. — SolveCongruence","title":"Solve system of linear congruence from HIP paper to order HIP boxes. — SolveCongruence","text":"See page 5 Robertson et al. 2018 Halton Iterative Partitioning. essentially internal function worried .","code":""},{"path":"/reference/SolveCongruence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve system of linear congruence from HIP paper to order HIP boxes. — SolveCongruence","text":"","code":"SolveCongruence(A, base, J)"},{"path":"/reference/SolveCongruence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve system of linear congruence from HIP paper to order HIP boxes. — SolveCongruence","text":"Matrix numeric computational reasons a_i solutions HIP boxes. base Co-prime Base generally BAS work 2 3. J Integer 2 values represent numbers 2^J1, 3^J2.","code":""},{"path":"/reference/SolveCongruence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve system of linear congruence from HIP paper to order HIP boxes. — SolveCongruence","text":"numeric vector.","code":""},{"path":"/reference/SpacialBalanceMeasures.html","id":null,"dir":"Reference","previous_headings":"","what":"Do something useful. — SpacialBalanceMeasures","title":"Do something useful. — SpacialBalanceMeasures","text":"description useful function.","code":""},{"path":"/reference/SpacialBalanceMeasures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do something useful. — SpacialBalanceMeasures","text":"","code":"SpacialBalanceMeasures(parm1)"},{"path":"/reference/SpacialBalanceMeasures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do something useful. — SpacialBalanceMeasures","text":"parm1 parameter.","code":""},{"path":"/reference/SpacialBalanceMeasures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do something useful. — SpacialBalanceMeasures","text":"something useful.","code":""},{"path":"/reference/SpatialStratification.html","id":null,"dir":"Reference","previous_headings":"","what":"Do something useful. — SpatialStratification","title":"Do something useful. — SpatialStratification","text":"description useful function.","code":""},{"path":"/reference/SpatialStratification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do something useful. — SpatialStratification","text":"","code":"SpatialStratification(parm1)"},{"path":"/reference/SpatialStratification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do something useful. — SpatialStratification","text":"parm1 parameter.","code":""},{"path":"/reference/SpatialStratification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do something useful. — SpatialStratification","text":"something useful.","code":""},{"path":"/reference/VarianceEstimators.html","id":null,"dir":"Reference","previous_headings":"","what":"Do something useful. — VarianceEstimators","title":"Do something useful. — VarianceEstimators","text":"description useful function.","code":""},{"path":"/reference/VarianceEstimators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do something useful. — VarianceEstimators","text":"","code":"VarianceEstimators(parm1)"},{"path":"/reference/VarianceEstimators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do something useful. — VarianceEstimators","text":"parm1 parameter.","code":""},{"path":"/reference/VarianceEstimators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do something useful. — VarianceEstimators","text":"something useful.","code":""},{"path":"/reference/compareBoxesBoxInit.html","id":null,"dir":"Reference","previous_headings":"","what":"title. — compareBoxesBoxInit","title":"title. — compareBoxesBoxInit","text":"description.","code":""},{"path":"/reference/compareBoxesBoxInit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"title. — compareBoxesBoxInit","text":"","code":"compareBoxesBoxInit(boxes, boxInit, intB)"},{"path":"/reference/compareBoxesBoxInit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"title. — compareBoxesBoxInit","text":"boxes bla. boxInit bla. intB bla.","code":""},{"path":"/reference/compareBoxesBoxInit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"title. — compareBoxesBoxInit","text":"something","code":""},{"path":"/reference/cppBASMasterSample.html","id":null,"dir":"Reference","previous_headings":"","what":"A placeholder for now. — cppBASMasterSample","title":"A placeholder for now. — cppBASMasterSample","text":"placeholder now.","code":""},{"path":"/reference/cppBASMasterSample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A placeholder for now. — cppBASMasterSample","text":"Nothing.","code":""},{"path":"/reference/cppBASMastersample.html","id":null,"dir":"Reference","previous_headings":"","what":"cppBASMastersample — cppBASMastersample","title":"cppBASMastersample — cppBASMastersample","text":"placeholder now.","code":""},{"path":"/reference/cppBASMastersample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cppBASMastersample — cppBASMastersample","text":"Nothing.","code":""},{"path":"/reference/cppHaltonSeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Halton Sequence values for a single dimension. — cppHaltonSeq","title":"Draw Halton Sequence values for a single dimension. — cppHaltonSeq","text":"Note borrowed Internet implementation.","code":""},{"path":"/reference/cppHaltonSeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Halton Sequence values for a single dimension. — cppHaltonSeq","text":"","code":"cppHaltonSeq(k, base, n)"},{"path":"/reference/cppHaltonSeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Halton Sequence values for a single dimension. — cppHaltonSeq","text":"k integer starting index k >= 0. base Co-prime Base generally BAS work 2 3. n Number samples draw.","code":""},{"path":"/reference/cppHaltonSeq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Halton Sequence values for a single dimension. — cppHaltonSeq","text":"Halton sequence size n.","code":""},{"path":"/reference/cppHaltonSeq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Halton Sequence values for a single dimension. — cppHaltonSeq","text":"","code":"uc511::cppHaltonSeq(k = 0, base = 2, n = 10) #>  [1] 0.0000 0.5000 0.2500 0.7500 0.1250 0.6250 0.3750 0.8750 0.0625 0.5625"},{"path":"/reference/cppProductPoweredElements.html","id":null,"dir":"Reference","previous_headings":"","what":"Raise each element in a vector by a corresponding power provided in another vector,\nthen return the product of all the results. — cppProductPoweredElements","title":"Raise each element in a vector by a corresponding power provided in another vector,\nthen return the product of all the results. — cppProductPoweredElements","text":"Raise element vector corresponding power provided another vector, return product results.","code":""},{"path":"/reference/cppProductPoweredElements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raise each element in a vector by a corresponding power provided in another vector,\nthen return the product of all the results. — cppProductPoweredElements","text":"","code":"cppProductPoweredElements(J, bases, numElements)"},{"path":"/reference/cppProductPoweredElements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raise each element in a vector by a corresponding power provided in another vector,\nthen return the product of all the results. — cppProductPoweredElements","text":"J numeric vector values raise corresponding element bases . bases numeric vector containing values raised corresponding powers J numElements number elements numeric vector bases.","code":""},{"path":"/reference/cppProductPoweredElements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raise each element in a vector by a corresponding power provided in another vector,\nthen return the product of all the results. — cppProductPoweredElements","text":"product powers.","code":""},{"path":"/reference/cppProductPoweredElements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raise each element in a vector by a corresponding power provided in another vector,\nthen return the product of all the results. — cppProductPoweredElements","text":"","code":"# calculate the product of the powered elements uc511::cppProductPoweredElements(c(1, 2, 3), c(3, 2, 1), 3) #> [1] 12"},{"path":"/reference/cppRSHalton.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate numbers from a Halton Sequence with a random start — cppRSHalton","title":"Generate numbers from a Halton Sequence with a random start — cppRSHalton","text":"efficiency, function can generate points along random start Halton Sequence predefined Halton.","code":""},{"path":"/reference/cppRSHalton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate numbers from a Halton Sequence with a random start — cppRSHalton","text":"","code":"cppRSHalton(   n = 10L,   seeds = as.integer(c()),   bases = as.numeric(c()),   boxes = as.numeric(c()),   J = as.numeric(c()) )"},{"path":"/reference/cppRSHalton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate numbers from a Halton Sequence with a random start — cppRSHalton","text":"n Number points required seeds Random starting point dimension bases Co-prime base Halton Sequence boxes Halton boxes points required generated J Defines Halton frame, relates number boxes used.","code":""},{"path":"/reference/cppRSHalton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate numbers from a Halton Sequence with a random start — cppRSHalton","text":"Matrix columns, order point, x [0,1) y [0,1)","code":""},{"path":"/reference/cppRSHalton.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate numbers from a Halton Sequence with a random start — cppRSHalton","text":"","code":"# First 10 points in the Halton Sequence for base 2,3 uc511::cppRSHalton(n = 10) #> cppRSHalton() seeds.size() : 0 #>       [,1]   [,2]       [,3] #>  [1,]    1 0.0000 0.00000000 #>  [2,]    2 0.5000 0.33333333 #>  [3,]    3 0.2500 0.66666667 #>  [4,]    4 0.7500 0.11111111 #>  [5,]    5 0.1250 0.44444444 #>  [6,]    6 0.6250 0.77777778 #>  [7,]    7 0.3750 0.22222222 #>  [8,]    8 0.8750 0.55555556 #>  [9,]    9 0.0625 0.88888889 #> [10,]   10 0.5625 0.03703704 # First 10 points in the Halton Sequence for base 2,3 with # starting point at the 15th and 22nd index. uc511::cppRSHalton(n = 10, seeds = c(14, 21)) #> cppRSHalton() seeds.size() : 2 #>       [,1]    [,2]       [,3] #>  [1,]    1 0.43750 0.18518519 #>  [2,]    2 0.93750 0.51851852 #>  [3,]    3 0.03125 0.85185185 #>  [4,]    4 0.53125 0.29629630 #>  [5,]    5 0.28125 0.62962963 #>  [6,]    6 0.78125 0.96296296 #>  [7,]    7 0.15625 0.01234568 #>  [8,]    8 0.65625 0.34567901 #>  [9,]    9 0.40625 0.67901235 #> [10,]   10 0.90625 0.12345679"},{"path":"/reference/cppWhere2Start.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to find the ordering of the first box according to the random seed. — cppWhere2Start","title":"Internal function to find the ordering of the first box according to the random seed. — cppWhere2Start","text":"function find Halton Box initial BAS point Master Sample falls thus use order remaining boxes based initial. also helps us tracks master sample index skip boxes resource.","code":""},{"path":"/reference/cppWhere2Start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to find the ordering of the first box according to the random seed. — cppWhere2Start","text":"","code":"cppWhere2Start(J, seeds, bases, boxes)"},{"path":"/reference/cppWhere2Start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to find the ordering of the first box according to the random seed. — cppWhere2Start","text":"J Definition number grid cells Halton frame. seeds Master Sample random seed. bases Co-prime bases really always 2,3 boxes ordering boxes clipped reordered according master sample seed.","code":""},{"path":"/reference/cppWhere2Start.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to find the ordering of the first box according to the random seed. — cppWhere2Start","text":"vector reordered Halton indices.","code":""},{"path":"/reference/getBASMasterSample.html","id":null,"dir":"Reference","previous_headings":"","what":"Select points from a polygon using a BAS Master Sample. — getBASMasterSample","title":"Select points from a polygon using a BAS Master Sample. — getBASMasterSample","text":"main function selecting sites using BAS master sample. assumes already defined master sample using buildMS() function selecting marine master sample site BC.","code":""},{"path":"/reference/getBASMasterSample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select points from a polygon using a BAS Master Sample. — getBASMasterSample","text":"","code":"getBASMasterSample(   shp,   N = 100,   bb = NULL,   stratum = NULL,   nExtra = 10000,   quiet = FALSE,   inclSeed = NULL )"},{"path":"/reference/getBASMasterSample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select points from a polygon using a BAS Master Sample. — getBASMasterSample","text":"shp Shape file polygon (sp sf) select sites . N Number sites select. using stratification named vector containing sample sizes group. bb Bounding box defines Master Sample. Default BC Marine Master Sample. stratum Name column data.frame attached shapefile makes strata. nExtra efficiency problem many extra samples draw spatial clipping shp. quiet Boolean want see output printed screen. Helpful taking long time. inclSeed Boolean need something ","code":""},{"path":"/reference/getBASMasterSample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select points from a polygon using a BAS Master Sample. — getBASMasterSample","text":"something","code":""},{"path":"/reference/getBASMasterSample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select points from a polygon using a BAS Master Sample. — getBASMasterSample","text":"","code":"if (FALSE) { data(Fed_MPAs_clipped) # Sample sizes for each stratum: # chose how many sites in each polygon in the dataset N_Zone <- c(\"Adaptive Management Zone\" = 30, \"Marine\" = 20, \"Other\" = 40) # Rename the NA value as the function does not accept NA at the moment. Fed_MPAs_clipped$ZONEDESC_E[is.na(Fed_MPAs_clipped$ZONEDESC_E)] <- \"Other\" # Core Protection is totally within Adaptive Management Zone. Remove it or # make it explicit that it is different. shp.MPAs <- Fed_MPAs_clipped[Fed_MPAs_clipped$ZONEDESC_E != \"Core Protection Zone\", ] # Select the Master Sample sites: smp.str <- uc511::getBASMasterSample(shp.MPAs, N = N_Zone, stratum = \"ZONEDESC_E\", quiet = FALSE) plot(sf::st_geometry(shp.MPAs)) plot(sf::st_geometry(smp.str), add = T, col= \"red\", pch = 16) }"},{"path":"/reference/getBB.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the bounding box for other functions. — getBB","title":"Get the bounding box for other functions. — getBB","text":"Bounding box NAD83/BC Albers.","code":""},{"path":"/reference/getBB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the bounding box for other functions. — getBB","text":"","code":"getBB()"},{"path":"/reference/getBB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the bounding box for other functions. — getBB","text":"bounding box.","code":""},{"path":"/reference/getIndividualBoxIndices.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Halton Box Index for a point. — getIndividualBoxIndices","title":"Get the Halton Box Index for a point. — getIndividualBoxIndices","text":"pass discrete points function return Halton Index according Master Sample defined bounding box. points closer together defined box size treated sample unit. expect spatially balanced recommend using function alone select sample.","code":""},{"path":"/reference/getIndividualBoxIndices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Halton Box Index for a point. — getIndividualBoxIndices","text":"","code":"getIndividualBoxIndices(pts, J = NULL, bb, size = 100)"},{"path":"/reference/getIndividualBoxIndices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Halton Box Index for a point. — getIndividualBoxIndices","text":"pts Shape file polygon (sp sf) generate boxes . J Definition number grid cells Halton frame. bb Bounding box defines Master Sample. Default BC Marine Master Sample. size Physical target size Halton boxes (square ish) J NULL.","code":""},{"path":"/reference/getIndividualBoxIndices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Halton Box Index for a point. — getIndividualBoxIndices","text":"something","code":""},{"path":"/reference/getIndividualBoxIndices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Halton Box Index for a point. — getIndividualBoxIndices","text":"","code":"if (FALSE) { library(bcmaps) # If you haven't already installed this: install.packages('bcmapsdata', repos='https://bcgov.github.io/drat/') library(bcmapsdata) cities <- bcmaps::get_layer(\"bc_cities\") bb <- uc511::buildMS(cities, d = 2, FALSE) # For visibility will make boxes 10 km cities.ord <- uc511::getIndividualBoxIndices(pts = cities, bb = bb, size = 100) plot(st_geometry(cities), pch = 20) plot(st_geometry(cities.ord[rank(cities.ord$HaltonIndex) < 15,]), add= TRUE, col = \"red\", cex = 1.5) }"},{"path":"/reference/getProj.html","id":null,"dir":"Reference","previous_headings":"","what":"Define spatial objects in projection of the master sample. — getProj","title":"Define spatial objects in projection of the master sample. — getProj","text":"Default projection master sample. Needed consistency entire bounding box.","code":""},{"path":"/reference/getProj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define spatial objects in projection of the master sample. — getProj","text":"","code":"getProj()"},{"path":"/reference/getProj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define spatial objects in projection of the master sample. — getProj","text":"something","code":""},{"path":"/reference/getRotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the radians of rotation of the bounding box. — getRotation","title":"Returns the radians of rotation of the bounding box. — getRotation","text":"Defines random rotation specific Western Canada Marine Master Sample.","code":""},{"path":"/reference/getRotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the radians of rotation of the bounding box. — getRotation","text":"","code":"getRotation()"},{"path":"/reference/getRotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the radians of rotation of the bounding box. — getRotation","text":"radians rotation bounding box.","code":""},{"path":"/reference/getSeed.html","id":null,"dir":"Reference","previous_headings":"","what":"Random seed definition for Western Canada Marine Master Sample. — getSeed","title":"Random seed definition for Western Canada Marine Master Sample. — getSeed","text":"Defines random seed specific Western Canada Marine Master Sample.","code":""},{"path":"/reference/getSeed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random seed definition for Western Canada Marine Master Sample. — getSeed","text":"","code":"getSeed()"},{"path":"/reference/getSeed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random seed definition for Western Canada Marine Master Sample. — getSeed","text":"random seeds Western Canada Marine Master Sample.","code":""},{"path":"/reference/log_a_to_base_b.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log of a to base b. — log_a_to_base_b","title":"Compute the log of a to base b. — log_a_to_base_b","text":"Compute log base b.","code":""},{"path":"/reference/log_a_to_base_b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log of a to base b. — log_a_to_base_b","text":"","code":"log_a_to_base_b(a, b)"},{"path":"/reference/log_a_to_base_b.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log of a to base b. — log_a_to_base_b","text":"Integer find log base b . b Base","code":""},{"path":"/reference/log_a_to_base_b.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log of a to base b. — log_a_to_base_b","text":"log base b.","code":""},{"path":"/reference/log_a_to_base_b.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the log of a to base b. — log_a_to_base_b","text":"","code":"# calculate log of a to base b. log_a_to_base_b(2, 4) #> [1] 0.5"},{"path":"/reference/makeFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Halton Frame raster, defined in sf based on the bounding box master sample. — makeFrame","title":"Create a Halton Frame raster, defined in sf based on the bounding box master sample. — makeFrame","text":"Make Halton Frame based B = 2^J[1]*3^J[2] grid cells. rotation required, return rotated. function internal function simply select sub BAS points without spatial clipping point level.","code":""},{"path":"/reference/makeFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Halton Frame raster, defined in sf based on the bounding box master sample. — makeFrame","text":"","code":"makeFrame(base = c(2, 3), J = c(2, 2), bb, rotate = FALSE)"},{"path":"/reference/makeFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Halton Frame raster, defined in sf based on the bounding box master sample. — makeFrame","text":"base Co-prime base BAS, change 2,3. J Definition number grid cells Halton frame. bb Bounding box shapefile centroid, random seed, rotation. rotate Boolean want rotate shape exporting.","code":""},{"path":"/reference/makeFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Halton Frame raster, defined in sf based on the bounding box master sample. — makeFrame","text":"rotated sf spatial object.","code":""},{"path":"/reference/makeFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Halton Frame raster, defined in sf based on the bounding box master sample. — makeFrame","text":"","code":"if (FALSE) { bb <- uc511::getBB() haltonFrame <- uc511::makeFrame(J = c(8,4), bb = bb) }"},{"path":"/reference/masterSampleSelect.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate sample points using BAS master sample. — masterSampleSelect","title":"Generate sample points using BAS master sample. — masterSampleSelect","text":"function features generally expected run wrapper function. masterSample ensures correct pieces passed adds additional feature stratification.","code":""},{"path":"/reference/masterSampleSelect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate sample points using BAS master sample. — masterSampleSelect","text":"","code":"masterSampleSelect(   shp,   N = 100,   bb = NULL,   nExtra = 5000,   printJ = FALSE,   inclSeed = NULL )"},{"path":"/reference/masterSampleSelect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate sample points using BAS master sample. — masterSampleSelect","text":"shp Shape file polygon select sites . N Number sites select. bb Bounding box defines Master Sample. Default BC Marine Master Sample. nExtra efficiency problem many extra samples draw spatial clipping shp. printJ Boolean want see J, many cuts space required generate sample efficiently. inclSeed Boolean need something ","code":""},{"path":"/reference/masterSampleSelect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate sample points using BAS master sample. — masterSampleSelect","text":"Sample points.","code":""},{"path":"/reference/point2Frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Halton Boxes around a point resource ordered by BAS Master Sample. — point2Frame","title":"Get the Halton Boxes around a point resource ordered by BAS Master Sample. — point2Frame","text":"Get Halton Boxes around point resource ordered BAS Master Sample. pass discrete points function return Halton frame represented ordering .","code":""},{"path":"/reference/point2Frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Halton Boxes around a point resource ordered by BAS Master Sample. — point2Frame","text":"","code":"point2Frame(pts, bb = NULL, base = c(2, 3), J = NULL, size = 100)"},{"path":"/reference/point2Frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Halton Boxes around a point resource ordered by BAS Master Sample. — point2Frame","text":"pts Shape file polygon (sp sf) generate boxes . bb Bounding box defines Master Sample. Default BC Marine Master Sample. base Co-prime base Halton sequence J Definition number grid cells Halton frame. size Physical target size Halton boxes (square ish) J NULL.","code":""},{"path":"/reference/point2Frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Halton Boxes around a point resource ordered by BAS Master Sample. — point2Frame","text":"Halton frame represented ordering .","code":""},{"path":"/reference/point2Frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Halton Boxes around a point resource ordered by BAS Master Sample. — point2Frame","text":"","code":"if (FALSE) { # If you haven't already installed this: install.packages('bcmapsdata', repos='https://bcgov.github.io/drat/') library(bcmapsdata) library(bcmaps) cities <- bcmaps::get_layer(\"bc_cities\") bb <- uc511::buildMS(cities, d = 2, FALSE) # For visibility will make boxes 10 km cities.halton <- uc511::point2Frame(pts = cities, bb = bb, size = 10000) plot(sf::st_geometry(cities), pch = 20, cex = 0.1) plot(sf::st_geometry(cities.halton), add= TRUE) # What is the actual area of a Halton box? sf::st_area(cities.halton[1,])/1000^2 }"},{"path":"/reference/rot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a rotation matrix for rotating objects later. — rot","title":"Generate a rotation matrix for rotating objects later. — rot","text":"Generate rotation matrix rotating objects later.","code":""},{"path":"/reference/rot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a rotation matrix for rotating objects later. — rot","text":"","code":"rot(a)"},{"path":"/reference/rot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a rotation matrix for rotating objects later. — rot","text":"radians rotation.","code":""},{"path":"/reference/rot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a rotation matrix for rotating objects later. — rot","text":"Matrix","code":""},{"path":"/reference/rot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a rotation matrix for rotating objects later. — rot","text":"","code":"if (FALSE) { rot(pi) }"},{"path":"/reference/rotate.bb.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate Bounding box by theta radians — rotate.bb","title":"Rotate Bounding box by theta radians — rotate.bb","text":"Given shp defined boundary interest, rotate around centroid return rotation centroid attributes. used defining Master Sample bounding box random rotation ensuring new rotated bounding box fits shp.","code":""},{"path":"/reference/rotate.bb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate Bounding box by theta radians — rotate.bb","text":"","code":"rotate.bb(shp, theta)"},{"path":"/reference/rotate.bb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate Bounding box by theta radians — rotate.bb","text":"shp spatial file spatial boundary sample. theta Radians rotation. Positive right pi/2, negative left.","code":""},{"path":"/reference/rotate.bb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate Bounding box by theta radians — rotate.bb","text":"Matrix","code":""},{"path":"/reference/rotate.bb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate Bounding box by theta radians — rotate.bb","text":"","code":"if (FALSE) { data(NS_bioregion) bb.new <- uc511::rotate.bb(NS_bioregion, -pi/3) }"},{"path":"/reference/rotate.scale.coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale and rotate points from the unit square to a defined projection. — rotate.scale.coords","title":"Scale and rotate points from the unit square to a defined projection. — rotate.scale.coords","text":"Given coordinates [0,1)x[0,1), shift scale bounding box, rotate given bounding box rotation defined Master Sample.","code":""},{"path":"/reference/rotate.scale.coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale and rotate points from the unit square to a defined projection. — rotate.scale.coords","text":"","code":"rotate.scale.coords(coords, bb, back = TRUE)"},{"path":"/reference/rotate.scale.coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale and rotate points from the unit square to a defined projection. — rotate.scale.coords","text":"coords Output RSHalton() converted spatial surface interest. bb Special shape file defining bounding box attributes centroid rotation. back Boolean whether rotation back original rotated bounding box.","code":""},{"path":"/reference/rotate.scale.coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale and rotate points from the unit square to a defined projection. — rotate.scale.coords","text":"sf spatial points projection defined bb.","code":""},{"path":"/reference/rotate.scale.coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale and rotate points from the unit square to a defined projection. — rotate.scale.coords","text":"","code":"if (FALSE) { pts <- uc511::cppRSHalton(n = 10) bb <- uc511::getBB() pts.shp <- uc511::rotate.scale.coords(coords = pts, bb) }"},{"path":"/reference/rotate.shp.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate a polygon around the centroid of a Master Sample bounding box. — rotate.shp","title":"Rotate a polygon around the centroid of a Master Sample bounding box. — rotate.shp","text":"Given polygon within bounding box Master Sample rotate theta defined bounding box either backwards forwards.","code":""},{"path":"/reference/rotate.shp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate a polygon around the centroid of a Master Sample bounding box. — rotate.shp","text":"","code":"rotate.shp(shp, bb, back = TRUE)"},{"path":"/reference/rotate.shp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate a polygon around the centroid of a Master Sample bounding box. — rotate.shp","text":"shp polygon within sample frame defined spatial features object. bb Special shape file defining bounding box attributes centroid rotation. back Boolean whether rotation back original rotated bounding box.","code":""},{"path":"/reference/rotate.shp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate a polygon around the centroid of a Master Sample bounding box. — rotate.shp","text":"rotated sf spatial object.","code":""},{"path":"/reference/rotate.shp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate a polygon around the centroid of a Master Sample bounding box. — rotate.shp","text":"","code":"if (FALSE) { data(NS_bioregion) bb <- uc511::getBB() pts.shp <- uc511::rotate.shp(shp = NS_bioregion, bb = bb) }"},{"path":"/reference/shape2Frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Clip a Halton Frame based on the bounding box to the current shape. — shape2Frame","title":"Clip a Halton Frame based on the bounding box to the current shape. — shape2Frame","text":"Take shapefile sf object clips boxes Halton frame around . Size boxes chosen choosing J, number base 2,3 powers subdivide. Intended internal use can useful context.","code":""},{"path":"/reference/shape2Frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clip a Halton Frame based on the bounding box to the current shape. — shape2Frame","text":"","code":"shape2Frame(   shp,   bb = NULL,   base = c(2, 3),   J = c(2, 2),   projstring = NULL,   rotate = FALSE )"},{"path":"/reference/shape2Frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clip a Halton Frame based on the bounding box to the current shape. — shape2Frame","text":"shp shape spatial features object wrap Halton frame. bb Master Sample bounding box. base Co-prime base BAS, change 2,3. J Definition number grid cells Halton frame. projstring Projection master sample , can passed part bounding box. rotate Boolean want rotate shape exporting.","code":""},{"path":"/reference/shape2Frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clip a Halton Frame based on the bounding box to the current shape. — shape2Frame","text":"rotated sf spatial object.","code":""},{"path":"/reference/shape2Frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clip a Halton Frame based on the bounding box to the current shape. — shape2Frame","text":"","code":"if (FALSE) { bb <- uc511::getBB() data(NS_bioregion) haltonBoxes <- uc511::shape2Frame(shp = NS_bioregion, J = c(6,4), bb = bb) }"}]
