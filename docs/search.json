[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 uc511 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/uc511.html","id":"uc511-spatially-balanced-sampling-","dir":"Articles","previous_headings":"","what":"uc511: Spatially balanced sampling.","title":"uc511 - Spatially Balanced Sampling","text":"vignette intended provide details functions methods uc511 package. uc511 package encapsulates number spatially balanced sampling algorithms namely, Balanced acceptance sampling (BAS) (equal, unequal, seed point, panels), Halton frames (discretizing continuous resource), HIP (equal probability), Spatial balance measures (Voronoi Modified Moran’s ), Variance estimators (local mean, nearest neighbour quasi bootstrap), DAS Spatial stratification algorithm. vignette divided following sections: Simple Random Sampling (SRS) Balanced acceptance sampling (BAS) Halton Iterative Partitioning (HIP) Halton Frames (HF) Lets start looking Simple Random Sampling (SRS).","code":""},{"path":"/articles/uc511.html","id":"simple-random-sampling-srs","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling.","what":"Simple Random Sampling (SRS)","title":"uc511 - Spatially Balanced Sampling","text":"Explain SRS …","code":""},{"path":"/articles/uc511.html","id":"uc511srs","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Simple Random Sampling (SRS)","what":"uc511::SRS()","title":"uc511 - Spatially Balanced Sampling","text":"function invokes base::sample() draw random sample using user specified random seed. Returned list random positive integers length sample_size, range 1 total_rows, can used index original population data. following parameters supported: seed - random seed used draw current sample. default 42. total_rows - total number rows population. sample_size - number rows wanted random sample. parameter values must numeric values greater zero, sample_size must less total_rows.","code":""},{"path":"/articles/uc511.html","id":"uc511srs-code-example","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Simple Random Sampling (SRS) > uc511::SRS()","what":"uc511::SRS() code example","title":"uc511 - Spatially Balanced Sampling","text":"Function uc511::SRS() returns list size sample_size.","code":"# Create a random sample of 20 with a seed of 99 from a population of 100. rand_samp <- uc511::SRS(seed = 99, total_rows = 100, sample_size = 20) rand_samp #>  [1] 48 33 44 22 62 32 13 20 31 68  9 82 88 30 86 84 95 14  4 78"},{"path":"/articles/uc511.html","id":"balanced-acceptance-sampling-bas","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling.","what":"Balanced acceptance sampling (BAS)","title":"uc511 - Spatially Balanced Sampling","text":"Explain BAS …","code":""},{"path":"/articles/uc511.html","id":"load-shape-file-input-options-for-bas","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Balanced acceptance sampling (BAS)","what":"Load Shape File : Input Options for BAS","title":"uc511 - Spatially Balanced Sampling","text":"BAS offers flexibility data input, allowing choose two options: Load Shape File: option, can directly import data shape files. method suitable data stored geographic information system (GIS) format ready used analysis within BAS option. Select Shape File Datafile: Alternatively, can choose import data R datafile. option useful data stored R-compatible format. provides seamless way access analyze data within BAS option. input options enable work data convenient compatible format, making easier perform BAS analysis visualization.","code":""},{"path":"/articles/uc511.html","id":"load-shape-file","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Balanced acceptance sampling (BAS) > Load Shape File : Input Options for BAS","what":"Load Shape File","title":"uc511 - Spatially Balanced Sampling","text":"option select …. find location shape files, holding Ctrl key clicking shapefile files enables selection multiple files, click OK selected required files. app load files. loaded, …. added Select Shapefile column dropdown box. user selects … Select Shapefile column dropdown box, populates Select Region Interest dropdown boxes region shapefile. dropdown box user can now select one regions. one regions selected Specify Parameters menu option become enabled allowing user specify update BAS parameters.","code":""},{"path":"/articles/uc511.html","id":"select-shape-file-from-datafile","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Balanced acceptance sampling (BAS) > Load Shape File : Input Options for BAS","what":"Select shape file from datafile","title":"uc511 - Spatially Balanced Sampling","text":"Need rework … option select …. find location shape files, holding Ctrl key clicking desired shapefile files enables selection multiple files, click OK selected required files. app load files. loaded, …. added Select Shapefile column dropdown box. user selects … Select Shapefile column dropdown box, populates Select Region Interest dropdown boxes region shapefile. dropdown box user can now select one regions. one regions selected Specify Parameters menu option become enabled allowing user specify update BAS parameters.","code":""},{"path":"/articles/uc511.html","id":"specify-parameters","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Balanced acceptance sampling (BAS)","what":"Specify Parameters","title":"uc511 - Spatially Balanced Sampling","text":"chosen input source, whether ’s shape files using “Load Shape File” option R datafile using “Select Shape File Datafile” option, next step configure BAS parameters. point, “Specify Parameters” menu option becomes enabled, allowing customize fine-tune parameters analysis. can specify update parameters tailor analysis specific needs, ensuring obtain meaningful results data.","code":""},{"path":"/articles/uc511.html","id":"sample-size-control-your-sample","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Balanced acceptance sampling (BAS) > Specify Parameters","what":"Sample Size : Control Your Sample","title":"uc511 - Spatially Balanced Sampling","text":"Sample Size option empowers define size sample need analysis. two choices specifying sample size: Percentage Population Size: can set sample size percentage total population size. Explicit Number: Alternatively, can specify sample size exact number. determined sample size, Generate Sample menu option become active. enables create BAS sample specified size. feature ensures flexibility tailor analysis exact sample size require, making results precise meaningful.","code":""},{"path":"/articles/uc511.html","id":"random-seed-options-reproducibility","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Balanced acceptance sampling (BAS) > Specify Parameters","what":"Random Seed Options : Reproducibility","title":"uc511 - Spatially Balanced Sampling","text":"Random Seed Options feature allows control randomness analysis. specifying random seed, can ensure reproducibility results. seed value used set.seed() function generating BAS sample. default, Shiny app sets random seed within range \\(1\\) \\(10,000\\). However, want use specific seed choice, follow steps: Select User specified seed option. Enter desired seed value input box labeled Specify seed use. Please note positive integer values within range \\(1\\) \\(10,000\\) accepted. allows fine-grained control randomness analysis maintaining reproducibility.","code":""},{"path":"/articles/uc511.html","id":"use-st_transform-shapefile-data-transformation","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Balanced acceptance sampling (BAS) > Specify Parameters","what":"Use st_transform : Shapefile Data Transformation","title":"uc511 - Spatially Balanced Sampling","text":"st_transform essential want apply transformation shapefile data visualizing using Visualize Sample option. ’s can use st_transform feature: Ensure ’ve checked Use st_transform checkbox. Use st_transform code text box, specify transformation code want apply data. default transformation code set \\(4326\\). However, can customize code match specific transformation requirements. functionality allows adapt shapefile data different coordinate systems projections, ensuring aligns correctly visualization needs.","code":""},{"path":"/articles/uc511.html","id":"minimum-distance","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Balanced acceptance sampling (BAS) > Specify Parameters","what":"Minimum Distance","title":"uc511 - Spatially Balanced Sampling","text":"Fill .","code":""},{"path":"/articles/uc511.html","id":"generate-sample-generate-sample-menu-options","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Balanced acceptance sampling (BAS)","what":"Generate Sample : Generate Sample Menu Options","title":"uc511 - Spatially Balanced Sampling","text":"Generate Sample menu option offers following user choices: Generate BAS Sample: can use option create BAS sample specified parameters. sample essential conducting various analyses visualizations within application. Download BAS Sample: generating sample, option save . allows store sample data future reference use external analyses. Saving sample enables maintain record analysis results enhances data management.","code":""},{"path":"/articles/uc511.html","id":"generate-bas-sample-generating-the-bas-sample","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Balanced acceptance sampling (BAS) > Generate Sample : Generate Sample Menu Options","what":"Generate BAS Sample : Generating the BAS Sample","title":"uc511 - Spatially Balanced Sampling","text":"create BAS sample, follow steps: Click Generate Sample button. Upon clicking button, Shiny app generate BAS sample according specified parameters. sample generated, following information displayed: First Ten Data Points: able view first ten data points sample. allows get quick overview data. Random Seed: random seed used generating sample also provided. seed crucial ensuring reproducibility analysis. can record seed future reference needed. providing access initial sample data random seed used, BAS app helps verify reproduce analysis results transparency accuracy.","code":""},{"path":"/articles/uc511.html","id":"download-bas-sample-saving-the-generated-sample-to-a-csv-file","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Balanced acceptance sampling (BAS) > Generate Sample : Generate Sample Menu Options","what":"Download BAS Sample : Saving the Generated Sample to a CSV File","title":"uc511 - Spatially Balanced Sampling","text":"wish save generated sample CSV file, follow steps: Use option want store sample data future reference analysis. Click Download button initiate file-saving process. action open standard file save dialog. default file name generated application follows format: dataset-bas-sample-yyyy-mm-dd-seed-ssss.csv ’s part default file name represents: yyyy: year sample generated. mm: month sample generated. dd: day sample generated. ssss: seed used generate sample. However, freedom customize file name location file saved. flexibility allows organize data according preferences, making easier manage work BAS samples.","code":""},{"path":"/articles/uc511.html","id":"visualize-sample-visualize-sample-menu-options","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Balanced acceptance sampling (BAS)","what":"Visualize Sample : Visualize Sample Menu Options","title":"uc511 - Spatially Balanced Sampling","text":"Visualize Sample menu option offers following user choices: Visualize BAS Sample Map: Selecting option allows generate interactive Leaflet map displays BAS sample. map provides visual representation data points enables explore analyze spatially. Save Image: visualizing BAS sample map, option save map image. feature allows preserve visualization future reference include reports presentations. Saving image enhances ability communicate share analysis results effectively.","code":""},{"path":"/articles/uc511.html","id":"visualize-bas-sample-on-map","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Balanced acceptance sampling (BAS) > Visualize Sample : Visualize Sample Menu Options","what":"Visualize BAS Sample on Map","title":"uc511 - Spatially Balanced Sampling","text":"Visualize BAS Sample Map menu item, users can effortlessly generate interactive Leaflet map. map automatically generated select Visualize Sample menu option. ensure successful map generation, follow prerequisites: Specify Parameters: Use Specify Parameters menu option specify column names used X Y axes. can done choosing Select X Y columns option. Coordinate System Transformation: Specify Coordinate Reference System (CRS) EPSG transform code using “Projected coordinate system” option. step ensures data aligns correctly map. default, map displays original data points black sample points red. can control sets points displayed map using Leaflet map control called addLayersControl. feature allows toggle displaying original data sample data, providing flexibility visualization. Additionally, click point map, popup message box appear, displaying latitude longitude coordinates specific point. interactive functionality allows explore analyze individual data points directly map, enhancing data visualization experience.","code":""},{"path":"/articles/uc511.html","id":"visualize-bas-sample-points","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Balanced acceptance sampling (BAS) > Visualize Sample : Visualize Sample Menu Options","what":"Visualize BAS Sample Points","title":"uc511 - Spatially Balanced Sampling","text":"really need ?","code":""},{"path":"/articles/uc511.html","id":"halton-iterative-partitioning-hip","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling.","what":"Halton Iterative Partitioning (HIP)","title":"uc511 - Spatially Balanced Sampling","text":"Halton iterative partitioning (HIP) extends Basic acceptance sampling (BAS) point resources. partitions resource \\(B ≥ n\\) boxes nested structure BAS, different sizes. boxes uniquely numbered using random-start Halton sequence length \\(B\\). HIP sample obtained randomly drawing one point boxes numbered \\(1, 2, . . . , n\\). uc511::HIP() function invokes uc511::cppRSHalton_br() generate Halton points.","code":""},{"path":"/articles/uc511.html","id":"uc511hip","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Halton Iterative Partitioning (HIP)","what":"uc511::HIP()","title":"uc511 - Spatially Balanced Sampling","text":"generate HIP sample use uc511::HIP() function, accepts following parameters:","code":""},{"path":"/articles/uc511.html","id":"population","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Halton Iterative Partitioning (HIP) > uc511::HIP()","what":"population","title":"uc511 - Spatially Balanced Sampling","text":"population parameter required (default), list points comprising population sample drawn. population parameter can specified either sf points object dataframe.","code":""},{"path":"/articles/uc511.html","id":"n","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Halton Iterative Partitioning (HIP) > uc511::HIP()","what":"n","title":"uc511 - Spatially Balanced Sampling","text":"n parameter number points draw population. default value 20.","code":""},{"path":"/articles/uc511.html","id":"iterations","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Halton Iterative Partitioning (HIP) > uc511::HIP()","what":"iterations","title":"uc511 - Spatially Balanced Sampling","text":"iterations parameter number levels partitioning required. default value 7.","code":""},{"path":"/articles/uc511.html","id":"uc511hip-output","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Halton Iterative Partitioning (HIP)","what":"uc511::HIP() output","title":"uc511 - Spatially Balanced Sampling","text":"uc511::HIP function returns following output form list variables. variable names contain follows: sampleI - indices selected sample points population. popIndex - used ? Order - used ? HaltonIndex - Halton indices population points. PopulationSample - sample drawn population, returned user sf points object PopulationIndex, Order HaltonIndex variables added new features sample.","code":""},{"path":"/articles/uc511.html","id":"uc511hip-code-example","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Halton Iterative Partitioning (HIP)","what":"uc511::HIP() code example","title":"uc511 - Spatially Balanced Sampling","text":"following sample code demonstrate use uc511::HIP() function. generating \\(20\\) points population \\(5,000\\) (random) points \\(7\\) levels partitioning (\\(4\\) first dimension \\(3\\) second) give \\(2^4 = 32\\) \\(3^3 = 27\\) boxes.","code":"# set random seed set.seed(1110)  # define HIP parameters. pop <- matrix(runif(500*2), nrow = 500, ncol = 2) n <- 36 its <- 3  # Convert the population matrix to an sf point object. sf_points <- sf::st_as_sf(data.frame(pop), coords = c(\"X1\", \"X2\")) dim(sf::st_coordinates(sf_points)) #> [1] 500   2  # generate HIP sample. result <- uc511::HIP(population = sf_points,                       n = n,                       iterations =  its)  # sampleI - indices of the selected samples from the population. sampleI <- result$sampleI sampleI #>  [1] 158 168 461  22 206 267 134 388 323 322 239 384 183 294 449 500 440 169 111 #> [20] 476 364  94   8 214 261  24 189 102 166 488 415 471 295 431 395 119  # popIndex popIndex <- result$popIndex head(popIndex) #> [1] 1 2 3 4 5 6  # Order Order <- result$Order head(Order) #> [1] 339 282 354 164 193 265  # HaltonIndex HaltonIndex <- result$HaltonIndex table(HaltonIndex) #> HaltonIndex #>  0  1  2  3  4  5  6  7  8  9 10 11  #> 41 41 41 41 41 41 41 41 41 41 41 41  # Population Sample PopulationSample <- result$PopulationSample PopulationSample #> Simple feature collection with 36 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0.1052627 ymin: 0.02691417 xmax: 0.9906434 ymax: 0.9928633 #> CRS:           NA #> First 10 features: #>                        geometry PopulationIndex Order HaltonIndex #> 1   POINT (0.6360102 0.3621826)             161    91          10 #> 2   POINT (0.1160351 0.4281732)             171   465           0 #> 3   POINT (0.7908288 0.9928633)             469   329           8 #> 4  POINT (0.3727725 0.04440845)              22     3           6 #> 5   POINT (0.5871755 0.5115127)             209   162           3 #> 6   POINT (0.1052627 0.8828905)             270   418           7 #> 7   POINT (0.9585368 0.2206295)             137   108           9 #> 8   POINT (0.3826913 0.6184779)             394   209           8 #> 9   POINT (0.6289525 0.9084795)             326   126           3 #> 10 POINT (0.2294293 0.09852393)             325   116           5"},{"path":"/articles/uc511.html","id":"halton-frames-hf","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling.","what":"Halton Frames (HF)","title":"uc511 - Spatially Balanced Sampling","text":"Halton frame useful grid structure, collection Halton boxes intersect resource.","code":""},{"path":"/articles/uc511.html","id":"uc511haltonframebase","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Halton Frames (HF)","what":"uc511::HaltonFrameBase()","title":"uc511 - Spatially Balanced Sampling","text":"function invokes uc511::cppRSHalton_br() generate Halton points. following parameters supported: J - number grid cells required. default \\(c(3, 2)\\). bases - co-prime base Halton sequence. default \\(c(2, 3)\\). n - number Halton points generate. default (\\(bases[1]^{J[1]} * bases[2]^{J[2]}\\)). parameter values must numeric values greater zero. J bases parameters must list length two.","code":""},{"path":"/articles/uc511.html","id":"uc511haltonframebase-code-example","dir":"Articles","previous_headings":"uc511: Spatially balanced sampling. > Halton Frames (HF) > uc511::HaltonFrameBase()","what":"uc511::HaltonFrameBase() code example","title":"uc511 - Spatially Balanced Sampling","text":"Function uc511::HaltonFrame() returns list variables, variables following names: halton_frame generated Halton frame. halton_sequence generated Halton sequence. Z something. halton_seq_dev \\(x\\) \\(y\\) axis values can used plotting sub-divide Halton frame.","code":"# Define parameters. J <- c(3, 2) bases <- c(2, 3) n <- (bases[1]^J[1]) * (bases[2]^J[2])  # generate Halton frame. hf_ <- uc511::HaltonFrameBase(n = n,                                J = J,                                bases = bases) #> cppBASpts() seeds : 12792 25055  # retrieve the Halton sequence. halton_seq <- hf_$halton_seq head(halton_seq) #>         [,1]       [,2] #> [1,] 0.12323 0.96511372 #> [2,] 0.62323 0.01449644 #> [3,] 0.37323 0.34782977 #> [4,] 0.87323 0.68116310 #> [5,] 0.24823 0.12560755 #> [6,] 0.74823 0.45894088  # retrieve the x-axis division values. halton_seq_x_divisions <- hf_$halton_seq_div[1] halton_seq_x_divisions #> [[1]] #> [1] 0.0 0.5  # retrieve the y-axis division values. halton_seq_y_divisions <- hf_$halton_seq_div[2] halton_seq_y_divisions #> [[1]] #> [1] 0.0000000 0.3333333 0.6666667  # retrieve the Z values. z <- hf_$Z head(z) #>            [,1]       [,2] #> [1,] 0.06610107 0.94865281 #> [2,] 0.56610107 0.04741825 #> [3,] 0.31610107 0.38075158 #> [4,] 0.81610107 0.71408491 #> [5,] 0.19110107 0.15852936 #> [6,] 0.69110107 0.49186269  # retrieve the Halton frame. halton_frame <- hf_$halton_frame head(halton_frame) #>       x_dim      y_dim #> [1,] 0.0625 0.94444444 #> [2,] 0.5625 0.05555556 #> [3,] 0.3125 0.38888889 #> [4,] 0.8125 0.72222222 #> [5,] 0.1875 0.16666667 #> [6,] 0.6875 0.50000000"},{"path":"/articles/uc511.html","id":"the-uc511-shiny-app-for-spatially-balanced-sampling-","dir":"Articles","previous_headings":"","what":"The uc511 Shiny App for Spatially balanced sampling.","title":"uc511 - Spatially Balanced Sampling","text":"Part uc511 package uc511 Shiny App, provides user interface uc511 package. Currently following options supported: SRS Simple random sampling using uc511::SRS() function. BAS Balanced acceptance sampling using uc511::BAS() function. HIP Halton Iterative Partitioning using uc511::HIP() function. following sections detail use supported features uc511 Shiny App.","code":""},{"path":"/articles/uc511.html","id":"uc511srs-from-the-uc511-shiny-app","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling.","what":"uc511::SRS() from the uc511 Shiny App","title":"uc511 - Spatially Balanced Sampling","text":"uc511 R package also includes Shiny App, menu option (SRS) invoke Simple Random Sampling. SRS menu option supports following sub-menu’s, Load Auxillary File, Specify Parameters, Generate SRS Sample, something something. now look turn options provided menu item. menu item enable relevant options previous menu item appropriately selected provided.","code":""},{"path":"/articles/uc511.html","id":"load-auxillary-file","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::SRS() from the uc511 Shiny App","what":"Load Auxillary File","title":"uc511 - Spatially Balanced Sampling","text":"user selects “Browse…” button initiate file selection dialog. selection single CSV file supported. application assumes first row CSV contains column headings. CSV file selected loaded Specify Parameters menu item enabled.","code":""},{"path":"/articles/uc511.html","id":"specify-parameters-1","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::SRS() from the uc511 Shiny App","what":"Specify Parameters","title":"uc511 - Spatially Balanced Sampling","text":"menu item, user able specify parameters subsequently passed uc511::SRS function. Specify Parameters menu item supports following tab panels: Sample source, Sample size, Random seed options, Select X Y columns, Projected coordinate system. now look option turn, see used.","code":""},{"path":"/articles/uc511.html","id":"sample-source","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::SRS() from the uc511 Shiny App > Specify Parameters","what":"Sample source","title":"uc511 - Spatially Balanced Sampling","text":"Sample source option controls type sample generated auxillary file. time writing two options supported: Sample Auxillary File default. option selected, user wants create random sample previously loaded auxillary file. Create Master Frame take sample option selected, Master Frame (need define ) created auxillary file random sample created Master Frame.","code":""},{"path":"/articles/uc511.html","id":"sample-size","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::SRS() from the uc511 Shiny App > Specify Parameters","what":"Sample size","title":"uc511 - Spatially Balanced Sampling","text":"Sample size option controls size generated sample. time writing two options supported: Sample size percentage default. option selected, slider displayed. Use slider select percentage auxillary file used sample. corresponding sample size displayed integer textbox right slider. User specified sample size (Rename option app update !). option selected, user able specify specific sample size text inputbox. sample size range one upto number rows auxillary file supported. Generate Sample menu item enable application user specified sample size.","code":""},{"path":"/articles/uc511.html","id":"random-seed-options","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::SRS() from the uc511 Shiny App > Specify Parameters","what":"Random seed options","title":"uc511 - Spatially Balanced Sampling","text":"Random seed options option controls random seed set. time writing two options supported: Set seed randomly default. option selected, shiny app. generate random seed range 1-10,000 (verify !). User specified seed option selected, textinput box displayed, gives user opportunity specify seed. valid integer acceptable (check validate !). default 42 provided.","code":""},{"path":"/articles/uc511.html","id":"select-x-and-y-columns","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::SRS() from the uc511 Shiny App > Specify Parameters","what":"Select X and Y columns","title":"uc511 - Spatially Balanced Sampling","text":"Select X Y columns option gives user chance select columns use X Y axes Visualize Sample menu option. Select column use X drop box select single column name use X-axis. Select column use Y drop box select single column name use Y-axis. drop boxes populated using column names obtained auxillary file.","code":""},{"path":"/articles/uc511.html","id":"projected-coordinate-system","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::SRS() from the uc511 Shiny App > Specify Parameters","what":"Projected coordinate system","title":"uc511 - Spatially Balanced Sampling","text":"parameter used Visualize Sample option selected. provides EPSG projected coordinate system used create proj4string (need explain context). Use CRS EPSG transform Check check-box option specify CRS EPSG code value. default value 28992 (?). checkbox checked, coordinate system transform performed.","code":""},{"path":"/articles/uc511.html","id":"generate-srs-sample","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::SRS() from the uc511 Shiny App","what":"Generate SRS Sample","title":"uc511 - Spatially Balanced Sampling","text":"menu item, user able generate random sample using parameters previously specified. Generate SRS Sample menu item supports following tab panels: Generate SRS sample, Download SRS sample, Download Master Sample Indices Download Master Sample. now look option turn, see used.","code":""},{"path":"/articles/uc511.html","id":"generate-srs-sample-1","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::SRS() from the uc511 Shiny App > Generate SRS Sample","what":"Generate SRS sample","title":"uc511 - Spatially Balanced Sampling","text":"generate SRS sample, click Generate SRS Sample button. random seed used generate sample displayed textbox right screen. user wants generate new sample new seed, change seed Random seed options panel generate new sample. generated sample displayed datatable ease perusal.","code":""},{"path":"/articles/uc511.html","id":"download-srs-sample","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::SRS() from the uc511 Shiny App > Generate SRS Sample","what":"Download SRS sample","title":"uc511 - Spatially Balanced Sampling","text":"Use option want save generated sample CSV file. Click Download button initiate file save process standard file save dialog. default file name generated application form: dataset-srs-sample-yyyy-mm-dd-seed.csv yyyy year, mm month, dd day seed seed used generate sample. user course free change file name location file saved.","code":""},{"path":"/articles/uc511.html","id":"download-master-sample-indices","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::SRS() from the uc511 Shiny App > Generate SRS Sample","what":"Download Master Sample Indices","title":"uc511 - Spatially Balanced Sampling","text":"Use option want save master sample indices CSV file. Click Download button initiate file save process standard file save dialog. default file name generated application form: dataset-srs-master-sample-indices-yyyy-mm-dd-seed.csv (need add seed code) yyyy year, mm month, dd day seed seed used generate sample. user course free change file name location file saved.","code":""},{"path":"/articles/uc511.html","id":"download-master-sample","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::SRS() from the uc511 Shiny App > Generate SRS Sample","what":"Download Master Sample","title":"uc511 - Spatially Balanced Sampling","text":"Use option want save master sample CSV file. Click Download button initiate file save process standard file save dialog. default file name generated application form: dataset-srs-master-frame-yyyy-mm-dd-seed.csv (need add seed code) yyyy year, mm month, dd day seed seed used generate sample. user course free change file name location file saved.","code":""},{"path":"/articles/uc511.html","id":"visualize-sample","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::SRS() from the uc511 Shiny App","what":"Visualize Sample","title":"uc511 - Spatially Balanced Sampling","text":"menu item, user able generate Leaflet map, map generated automatically Visualize Sample menu option selected. map generated successfully, user use Specify Parameters menu option specify column names use X Y axes, using Select X Y columns option specified CRS EPSG transform code using Projected coordinate system option. default, original data points (black) sample points (red) displayed map. leaflet map control [—] provides user ability select set points displayed. user can click point popup message box display latitude logitude point.","code":""},{"path":"/articles/uc511.html","id":"save-image","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::SRS() from the uc511 Shiny App > Visualize Sample","what":"Save Image","title":"uc511 - Spatially Balanced Sampling","text":"Clicking Save Image button initiate process standard file save dialog. default image file name generated application form: map-srs-sample-yyyy-mm-dd-seed.jpeg (need add seed code, check default jpeg) displayed map time Save Image button clicked saved image file.","code":""},{"path":"/articles/uc511.html","id":"uc511haltonframe-from-the-uc511-shiny-app","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling.","what":"uc511::HaltonFrame() from the uc511 Shiny App","title":"uc511 - Spatially Balanced Sampling","text":"uc511 R package includes Shiny App comprehensive set menu options, one primarily focused creating sample Halton Points. Halton Frame menu option serves central feature supports following sub-menus: Load Shape File: sub-menu allows load shape files application, providing spatial data foundation Halton Point sample. Specify Parameters: loading shape files, can utilize sub-menu specify various parameters, customizing Halton Point sample generated visualized. Generate Sample: appropriately configured parameters, can use sub-menu generate Halton Point sample. Visualize Frame: sub-menu enables visualize Halton Point frame, offering insights spatial distribution generated points. Visualize Sample: Finally, sub-menu allows visualize Halton Point sample, helping explore selected points. Please note menu option becomes enabled relevant options previous menu appropriately selected provided. ensures structured efficient workflow, guiding users necessary steps create analyze Halton Point samples effectively.","code":""},{"path":[]},{"path":"/articles/uc511.html","id":"specify-parameters-2","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::HaltonFrame() from the uc511 Shiny App","what":"Specify Parameters","title":"uc511 - Spatially Balanced Sampling","text":"Specify Parameters menu item allows users define parameters later passed uc511::HaltonFrame function. menu item offers several tab panels facilitate parameter configuration process, including: Sample Size: tab panel, can specify desired sample size, either percentage population explicit number. parameter controls number Halton Points generated. J: J tab panel allows set number dimensions Halton sequence. parameter defines spatial dimensions Halton Points generated. Bases: , can configure bases Halton sequence dimension. bases determine points distributed within specified dimensions. Random Seed Options: tab panel provides options set random seed reproducibility. can choose use default seed range specify custom seed value. Use st_transform: tab panel, can apply spatial transformation Halton Points using st_transform function. option useful want reproject points different coordinate system perform spatial transformations. tab panels allows fine-tune parameters according specific requirements. play crucial role shaping characteristics Halton Point sample generated uc511::HaltonFrame function, ensuring resulting points align analysis objectives spatial context.","code":""},{"path":"/articles/uc511.html","id":"sample-size-sample-size-configuration","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::HaltonFrame() from the uc511 Shiny App > Specify Parameters","what":"Sample size : Sample Size Configuration","title":"uc511 - Spatially Balanced Sampling","text":"Sample size option provides control size generated sample. current version, two options supported: Sample size percentage (Default): choose option, slider displayed. Use slider select desired percentage auxiliary file want use sample. corresponding sample size shown integer textbox next slider. User-specified sample size (Rename option app update !): Selecting option allows specify exact sample size entering specific number text input box. can set sample size ranging one total number rows auxiliary file. Please note Generate Sample menu item become enabled specified sample size. ensures application user defines sample size proceeding sample generation, providing clarity control process.","code":""},{"path":"/articles/uc511.html","id":"j-number-of-grid-cells","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::HaltonFrame() from the uc511 Shiny App > Specify Parameters","what":"J : Number of Grid Cells","title":"uc511 - Spatially Balanced Sampling","text":"J option allows control number grid cells used analysis. default, value set (3, 2). J parameter represented list containing two values. can adjust values customize granularity grid cells, can significant impact spatial resolution precision analysis. Experimenting different J values can help find optimal configuration specific requirements.","code":""},{"path":"/articles/uc511.html","id":"bases-specifying-co-prime-bases","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::HaltonFrame() from the uc511 Shiny App > Specify Parameters","what":"Bases : Specifying Co-prime Bases","title":"uc511 - Spatially Balanced Sampling","text":"Bases option allows define co-prime base values Halton sequence. default values parameter set (2, 3), Bases parameter represented list containing two values. co-prime bases determine Halton Points distributed within dimension sequence. adjusting Bases parameter, can fine-tune distribution pattern Halton Points, allowing achieve desired spatial characteristics analysis. Experimenting different base values can help tailor sequence meet specific needs.","code":""},{"path":"/articles/uc511.html","id":"random-seed-options-setting-the-random-seed-options","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::HaltonFrame() from the uc511 Shiny App > Specify Parameters","what":"Random seed options : Setting the Random Seed Options","title":"uc511 - Spatially Balanced Sampling","text":"Random seed options option allows control random seed established. current version, two options available: Set seed randomly (Default): default choice. selected, Shiny app generates random seed within range \\(1\\) \\(10,000\\). User-specified seed: choosing option, text input box displayed, allowing input seed value. valid integer acceptable. default value 42 provided, can replace different integer choice. Selecting appropriate random seed option important, can influence reproducibility consistency results. flexibility set custom seed ensures can control randomness analysis needed.","code":""},{"path":"/articles/uc511.html","id":"use-st_transform","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::HaltonFrame() from the uc511 Shiny App > Specify Parameters","what":"Use st_transform","title":"uc511 - Spatially Balanced Sampling","text":"Fill .","code":""},{"path":"/articles/uc511.html","id":"generate-sample","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::HaltonFrame() from the uc511 Shiny App","what":"Generate Sample","title":"uc511 - Spatially Balanced Sampling","text":"Generate Sample menu item empowers create random sample using parameters specified. menu item includes two tab panels: Generate Halton Frame Download Halton Frame Sample. Let’s explore purpose functionality : Generate Halton Frame: tab panel, can trigger generation random sample based previously defined parameters. step initiates process creating Halton Frame sample according specifications. Download Halton Frame Sample: random sample generated, can use tab panel download sample data. selecting option, can save generated Halton Frame sample file analysis storage. tab panels ensure streamlined organized workflow generating managing random samples. enable efficiently create, access, utilize Halton Frame samples data analysis tasks.","code":""},{"path":"/articles/uc511.html","id":"generate-halton-frame","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::HaltonFrame() from the uc511 Shiny App > Generate Sample","what":"Generate Halton Frame","title":"uc511 - Spatially Balanced Sampling","text":"Generating SRS Sample create Simple Random Sample (SRS) sample, follow steps: Click Generate ??? Sample button. Upon clicking button, SRS sample generated, random seed used specific sample displayed textbox right screen. wish generate new sample different seed, can change seed “Random seed options” panel initiate sample generation process . generated SRS sample displayed datatable easy examination analysis. format allows review work sample data conveniently, facilitating exploration insights.","code":""},{"path":"/articles/uc511.html","id":"download-halton-frame-sample-saving-the-generated-sample","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::HaltonFrame() from the uc511 Shiny App > Generate Sample","what":"Download Halton Frame sample : Saving the Generated Sample","title":"uc511 - Spatially Balanced Sampling","text":"wish save generated sample CSV file, follow steps: Click Download button. action initiate file-saving process, opening standard file save dialog. default file name generated application follows format: dataset-hf-sample-yyyy-mm-dd-seed-ssss.csv ’s part default file name represents: dataset: Indicates file contains dataset. hf-sample: Signifies dataset derived Halton Frame sample. yyyy: year sample generated. mm: month sample generated. dd: day sample generated. ssss: seed used generating sample associated file. However, freedom customize file name location file saved. flexibility allows organize store sample data according preferences, making accessible future analysis reference.","code":""},{"path":"/articles/uc511.html","id":"visualize-sample-generating-leaflet-maps","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::HaltonFrame() from the uc511 Shiny App","what":"Visualize Sample : Generating Leaflet Maps","title":"uc511 - Spatially Balanced Sampling","text":"Generate Leaflet Map menu item, users can effortlessly generate interactive Leaflet map. map automatically created select Visualize Sample menu option. successful map generation, follow prerequisites: Specify Parameters : Utilize Specify Parameters menu option define column names X Y axes. can done using Select X Y columns option. step crucial correctly positioning data map. Coordinate System Transformation: Specify Coordinate Reference System (CRS) EPSG transform code using Projected coordinate system option. ensures data aligns accurately map. default, map displays original data points black sample points red. Leaflet map control, known addLayersControl, empowers toggle displaying original data sample data, granting flexibility visualization. Additionally, map allows users interact data points. Clicking point trigger popup message box displays latitude longitude coordinates specific point. interactive feature enhances ability explore analyze individual data points directly map, making data visualization experience informative engaging.","code":""},{"path":"/articles/uc511.html","id":"save-image-saving-map-images","dir":"Articles","previous_headings":"The uc511 Shiny App for Spatially balanced sampling. > uc511::HaltonFrame() from the uc511 Shiny App > Visualize Sample : Generating Leaflet Maps","what":"Save Image : Saving Map Images","title":"uc511 - Spatially Balanced Sampling","text":"save images map, follow steps: Click Save Image button, initiate standard file save dialog. default image file name generated application follows format: map-hf-sample-yyyy-mm-dd-seed-ssss.jpeg ’s part default file name represents: map: Indicates file contains map image. hf: Represents HF option used map. sample: Refers fact image derived HF sample data. yyyy: year image saved. mm: month image saved. dd: day image saved. ssss: seed used generating sample associated image. ’s important note content displayed map moment click “Save Image” button saved image file. feature allows capture specific visualizations representations data future reference, reporting, sharing purposes.","code":""},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Phil Davies. Author, maintainer. Blair Robertson. Author. Paul van Dam-Bates. Author. Oliver Gansell. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Davies P, Robertson B, van Dam-Bates P, Gansell O (2024). uc511: Implements Number Spatially Balanced Sampling Algorithms. R package version 0.1.0.","code":"@Manual{,   title = {uc511: Implements a Number of Spatially Balanced Sampling Algorithms},   author = {Phil Davies and Blair Robertson and Paul {van Dam-Bates} and Oliver Gansell},   year = {2024},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"uc511","dir":"","previous_headings":"","what":"Implements a Number of Spatially Balanced Sampling Algorithms","title":"Implements a Number of Spatially Balanced Sampling Algorithms","text":"Repository hold R package uc511. package encapsulate number spatially balanced sampling algorithms, namely, BAS (equal, unequal, seed point, panels), Halton frames (discretizing continuous resource), HIP (equal probability), Spatial balance measures (Voronoi Modified Moran’s ), Variance estimators (local mean, nearest neighbour quasi bootstrap), DAS Spatial stratification algorithm. **** work progress everything subject change without notice.","code":""},{"path":"/reference/BAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Select points from a polygon using a BAS Master Sample. — BAS","title":"Select points from a polygon using a BAS Master Sample. — BAS","text":"main function selecting sites using BAS master sample. assumes already defined master sample using BoundingBox() function selecting marine master sample site BC.","code":""},{"path":"/reference/BAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select points from a polygon using a BAS Master Sample. — BAS","text":"","code":"BAS(   shapefile,   n = 100,   boundingbox = NULL,   panels = NULL,   panel_overlap = NULL,   stratum = NULL,   nExtra = 1000,   quiet = FALSE,   seeds = NULL )"},{"path":"/reference/BAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select points from a polygon using a BAS Master Sample. — BAS","text":"shapefile Shape file polygon (sp sf) select sites . n Number sites select. using stratification named vector containing sample sizes group. boundingbox Bounding box defines Master Sample. Default BC Marine Master Sample. panels list integers define size panel non-overlapping panels design. length list determines number panels required. sum integers panels parameter determine total number samples selected, n. default value panels NULL, indicates non-overlapping panel design wanted. panel_overlap list integers define overlap previous panel. used panels parameter NULL. default value panel_overlap NULL. length panel_overlap must equal length panels. first value always forced zero first panel never overlaps region. stratum Name column data.frame attached shapefile makes strata. nExtra efficiency problem many extra samples draw spatial clipping shp. quiet Boolean want see output printed screen. Helpful taking long time. seeds list seeds, u1 u2, specified user.","code":""},{"path":"/reference/BAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select points from a polygon using a BAS Master Sample. — BAS","text":"master sample.","code":""},{"path":"/reference/BAS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select points from a polygon using a BAS Master Sample. — BAS","text":"function first written Paul van Dam-Bates package BASMasterSample.","code":""},{"path":"/reference/BAS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select points from a polygon using a BAS Master Sample. — BAS","text":"","code":"if (FALSE) { data(Fed_MPAs_clipped) # Sample sizes for each stratum: # chose how many sites in each polygon in the dataset N_Zone <- c(\"Adaptive Management Zone\" = 30, \"Marine\" = 20, \"Other\" = 40) # Rename the NA value as the function does not accept NA at the moment. Fed_MPAs_clipped$ZONEDESC_E[is.na(Fed_MPAs_clipped$ZONEDESC_E)] <- \"Other\" # Core Protection is totally within Adaptive Management Zone. Remove it or # make it explicit that it is different. shp.MPAs <- Fed_MPAs_clipped[Fed_MPAs_clipped$ZONEDESC_E != \"Core Protection Zone\", ] # Select the Master Sample sites: smp.str <- uc511::BAS(shp.MPAs, N = N_Zone, stratum = \"ZONEDESC_E\", quiet = FALSE) plot(sf::st_geometry(shp.MPAs)) plot(sf::st_geometry(smp.str), add = T, col= \"red\", pch = 16) }"},{"path":"/reference/BASMastersample.html","id":null,"dir":"Reference","previous_headings":"","what":"BASMastersample.R\nDo something useful. — BASMastersample","title":"BASMastersample.R\nDo something useful. — BASMastersample","text":"description useful function.","code":""},{"path":"/reference/BASMastersample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BASMastersample.R\nDo something useful. — BASMastersample","text":"","code":"BASMastersample(parm1)"},{"path":"/reference/BASMastersample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BASMastersample.R\nDo something useful. — BASMastersample","text":"parm1 parameter.","code":""},{"path":"/reference/BASMastersample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BASMastersample.R\nDo something useful. — BASMastersample","text":"something useful.","code":""},{"path":"/reference/BoundingBox.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a new Master Sample with a random rotation and seed. — BoundingBox","title":"Build a new Master Sample with a random rotation and seed. — BoundingBox","text":"Randomly generate seed 10,000 possible values right now 2 dimensions. Note van Dam-Bates et al. (2018) required random seed falls main object shape, one islands New Zealand, within marine environment BC west coast. However, random rotation, able ignore detail. function used without random rotation, recommend running first master sample point indeed fall within largest scale master sample use.","code":""},{"path":"/reference/BoundingBox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a new Master Sample with a random rotation and seed. — BoundingBox","text":"","code":"BoundingBox(shp, d = 2, showOutput = TRUE, rotate = FALSE)"},{"path":"/reference/BoundingBox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a new Master Sample with a random rotation and seed. — BoundingBox","text":"shp Spatial feature defines boundary area define bounding box . d Dimension new Master Sample, stage work d=2. showOutput Print rotation random seed generated. rotate Boolean whether randomly rotate bounding box.","code":""},{"path":"/reference/BoundingBox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a new Master Sample with a random rotation and seed. — BoundingBox","text":"bounding box master sample.","code":""},{"path":"/reference/BoundingBox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build a new Master Sample with a random rotation and seed. — BoundingBox","text":"function first written Paul van Dam-Bates package BASMasterSample later ported package, uc511.","code":""},{"path":"/reference/BoundingBox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a new Master Sample with a random rotation and seed. — BoundingBox","text":"","code":"if (FALSE) { data(NS_bioregion) # Vertically aligned master sample bounding box. bb <- uc511::BoundingBox(shp = NS_bioregion) # Actual bounding box. bb.rot <- uc511::rotate.shp(bb, bb, back = TRUE) plot(sf::st_geometry(NS_bioregion)) plot(sf::st_geometry(bb.rot), add = TRUE) }"},{"path":"/reference/BuildMS.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a new Master Sample with a random rotation and seed. — BuildMS","title":"Build a new Master Sample with a random rotation and seed. — BuildMS","text":"Randomly generate seed 10,000 possible values right now 2 dimensions. Note van Dam-Bates et al. (2018) required random seed falls main object shape, one islands New Zealand, within marine environment BC west coast. However, random rotation, able ignore detail. function used without random rotation, recommend running first master sample point indeed fall within largest scale master sample use.","code":""},{"path":"/reference/BuildMS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a new Master Sample with a random rotation and seed. — BuildMS","text":"","code":"buildMS(shp, d = 2, showOutput = TRUE, rotate = TRUE)"},{"path":"/reference/BuildMS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a new Master Sample with a random rotation and seed. — BuildMS","text":"shp Spatial feature defines boundary area define bounding box . d Dimension new Master Sample, stage work d=2. showOutput Print rotation random seed generated. rotate Boolean whether randomly rotate bounding box.","code":""},{"path":"/reference/BuildMS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a new Master Sample with a random rotation and seed. — BuildMS","text":"bounding box master sample.","code":""},{"path":"/reference/BuildMS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build a new Master Sample with a random rotation and seed. — BuildMS","text":"function first written Paul van Dam-Bates package BASMasterSample later ported package, uc511.","code":""},{"path":"/reference/BuildMS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a new Master Sample with a random rotation and seed. — BuildMS","text":"","code":"if (FALSE) { data(NS_bioregion) bb <- uc511::buildMS(shp = NS_bioregion)         # Vertically aligned master sample bounding box. bb.rot <- uc511::rotate.shp(bb, bb, back = TRUE) # Actual bounding box. plot(sf::st_geometry(NS_bioregion)) plot(sf::st_geometry(bb.rot), add = TRUE) }"},{"path":"/reference/DAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Do something useful. — DAS","title":"Do something useful. — DAS","text":"description useful function.","code":""},{"path":"/reference/DAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do something useful. — DAS","text":"","code":"DAS(parm1)"},{"path":"/reference/DAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do something useful. — DAS","text":"parm1 parameter.","code":""},{"path":"/reference/DAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do something useful. — DAS","text":"something useful.","code":""},{"path":"/reference/GetBoxIndices.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast Implementation of finding x and y order numbers — GetBoxIndices","title":"Fast Implementation of finding x and y order numbers — GetBoxIndices","text":"Fast Implementation finding x y order numbers feed linear congruence equation. solves equation a_i HIP paper. essentially internal function worried .","code":""},{"path":"/reference/GetBoxIndices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast Implementation of finding x and y order numbers — GetBoxIndices","text":"","code":"GetBoxIndices(lxy, base, J)"},{"path":"/reference/GetBoxIndices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast Implementation of finding x and y order numbers — GetBoxIndices","text":"lxy Matrix lower x y coordinates Halton Box inside unit box. base Co-prime Base generally BAS work 2 3. J Integer 2 values represent numbers 2^J1, 3^J2.","code":""},{"path":"/reference/GetBoxIndices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast Implementation of finding x and y order numbers — GetBoxIndices","text":"matrix box indices","code":""},{"path":"/reference/GetBoxIndices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fast Implementation of finding x and y order numbers — GetBoxIndices","text":"function first written Paul van Dam-Bates package BASMasterSample.","code":""},{"path":"/reference/HIP.html","id":null,"dir":"Reference","previous_headings":"","what":"A title. — HIP","title":"A title. — HIP","text":"description.","code":""},{"path":"/reference/HIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A title. — HIP","text":"","code":"HIP(population, n = 20, iterations = 7)"},{"path":"/reference/HIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A title. — HIP","text":"population population points. (pop always pairs points?). n number points draw population. Default 20. iterations levels partitioning required. Default 7.","code":""},{"path":"/reference/HIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A title. — HIP","text":"list containing following variables: sampleI - indices sample points use. popIndex - ??? Order - ??? HaltonIndex - Halton indices population points. Population - ???","code":""},{"path":"/reference/HIP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A title. — HIP","text":"details.","code":""},{"path":"/reference/HaltonFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Halton Frame. — HaltonFrame","title":"Generate a Halton Frame. — HaltonFrame","text":"description useful function.","code":""},{"path":"/reference/HaltonFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Halton Frame. — HaltonFrame","text":"","code":"HaltonFrame(   n = (bases[1]^J[1]) * (bases[2]^J[2]),   J = base::c(3, 2),   bases = base::c(2, 3),   shapefile = NULL,   panels = NULL,   panel_overlap = NULL,   randomStart = FALSE,   seeds = NULL,   stratum = NULL )"},{"path":"/reference/HaltonFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Halton Frame. — HaltonFrame","text":"n number points frame generate. J number grid cells. list 2 values. default value c(3, 2), also use c(5, 3). bases Co-prime base Halton Sequence. default value c(2, 3). shapefile sf object. shapefile parameter NULL function uc511::HaltonFrameBase called directly. panels list integers define size panel non-overlapping panels design. length list determines number panels required. sum integers panels parameter determine total number samples selected, n. default value panels NULL, indicates non-overlapping panel design wanted. panel_overlap list integers define overlap previous panel. used panels parameter NULL. default value panel_overlap NULL. length panel_overlap must equal length panels. first value always forced zero first panel never overlaps region. randomStart Whether spatially balanced sample randomly drawn frame . Default value FALSE. seeds list 2 seeds, u1 u2. specified, default NULL. stratum Name column shapefile makes strata.","code":""},{"path":"/reference/HaltonFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Halton Frame. — HaltonFrame","text":"list containing following variables: - halton_seq - halton_seq_div - Z - halton_frame - J - sample - pts.shp - bb","code":""},{"path":"/reference/HaltonFrame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Halton Frame. — HaltonFrame","text":"function written Phil Davies.","code":""},{"path":"/reference/HaltonFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Halton Frame. — HaltonFrame","text":"","code":"if (FALSE) { hf_ <- uc511::HaltonFrame() }"},{"path":"/reference/HaltonFrameBase.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Halton Frame. — HaltonFrameBase","title":"Generate a Halton Frame. — HaltonFrameBase","text":"description useful function.","code":""},{"path":"/reference/HaltonFrameBase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Halton Frame. — HaltonFrameBase","text":"","code":"HaltonFrameBase(   n = (bases[1]^J[1]) * (bases[2]^J[2]),   J = base::c(3, 2),   bases = base::c(2, 3),   seeds = NULL )"},{"path":"/reference/HaltonFrameBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Halton Frame. — HaltonFrameBase","text":"n number points frame generate. J number grid cells. list 2 values. default value c(3, 2), also use c(5, 3). bases Co-prime base Halton Sequence. default value c(2, 3). seeds u1 u2 seeds use.","code":""},{"path":"/reference/HaltonFrameBase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Halton Frame. — HaltonFrameBase","text":"list containing following four variables: halton_seq - halton_seq_div - Z - halton_frame -","code":""},{"path":"/reference/HaltonFrameBase.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Halton Frame. — HaltonFrameBase","text":"function written Phil Davies.","code":""},{"path":"/reference/HaltonFrameBase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Halton Frame. — HaltonFrameBase","text":"","code":"if (FALSE) { hf_ <- uc511::HaltonFrameBase() }"},{"path":"/reference/HaltonFrames.html","id":null,"dir":"Reference","previous_headings":"","what":"A title. — HaltonFrames","title":"A title. — HaltonFrames","text":"description useful function.","code":""},{"path":"/reference/HaltonFrames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A title. — HaltonFrames","text":"","code":"HaltonFrames(parm1)"},{"path":"/reference/HaltonFrames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A title. — HaltonFrames","text":"parm1 parameter.","code":""},{"path":"/reference/HaltonFrames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A title. — HaltonFrames","text":"Something useful.","code":""},{"path":"/reference/HaltonFrames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A title. — HaltonFrames","text":"function written Phil Davies.","code":""},{"path":"/reference/PanelDesignAssignPanelids.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign panel ids to the samples. — PanelDesignAssignPanelids","title":"Assign panel ids to the samples. — PanelDesignAssignPanelids","text":"function assigns panel id's sample based values panels panel_overlap parameters. internal function.","code":""},{"path":"/reference/PanelDesignAssignPanelids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign panel ids to the samples. — PanelDesignAssignPanelids","text":"","code":"PanelDesignAssignPanelids(   smp,   panels,   panel_overlap,   panel_design,   number_panels )"},{"path":"/reference/PanelDesignAssignPanelids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign panel ids to the samples. — PanelDesignAssignPanelids","text":"smp shapefile region study. panels list integers define size panel non-overlapping panels design. length list determines number panels required. sum integers panels parameter determine total number samples selected, n. default value panels NULL, indicates non-overlapping panel design wanted. panel_overlap list integers define overlap previous panel. used panels parameter NULL. default value panel_overlap NULL. length panel_overlap must equal length panels. first value always forced zero first panel never overlaps region. panel_design flag, TRUE, indicates performing panel design parameters used specified panels panel_overlap parameters. number_panels number sample panels required.","code":""},{"path":"/reference/PanelDesignAssignPanelids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign panel ids to the samples. — PanelDesignAssignPanelids","text":"Returns list following variables: sample, original shapefile appropriate panel id's add feature. panel id values determined panels panel_overlap parameters.","code":""},{"path":"/reference/PanelDesignAssignPanelids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assign panel ids to the samples. — PanelDesignAssignPanelids","text":"function written Phil Davies.","code":""},{"path":"/reference/SRS.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple random sampling. — SRS","title":"Simple random sampling. — SRS","text":"function invokes base::sample() draw random sample using user specified random seed.","code":""},{"path":"/reference/SRS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple random sampling. — SRS","text":"","code":"SRS(seed = 511, total_rows = 0, sample_size = 0)"},{"path":"/reference/SRS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple random sampling. — SRS","text":"seed random seed used draw current sample. total_rows total number rows input dataset. sample_size number rows wanted random sample.","code":""},{"path":"/reference/SRS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple random sampling. — SRS","text":"random sample.","code":""},{"path":"/reference/SRS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simple random sampling. — SRS","text":"function written Phil Davies.","code":""},{"path":"/reference/SRS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple random sampling. — SRS","text":"","code":"if (FALSE) { # Create a random sample with a seed of 99. uc511::SRS(seed = 99, total_rows = 100, sample_size = 20) # Create a random sample with a seed of 42. uc511::SRS(seed = 42, total_rows = 100, sample_size = 20) # Create a random sample with a seed of 99. uc511::SRS(seed = 99, total_rows = 100, sample_size = 25) }"},{"path":"/reference/SolveCongruence.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve system of linear congruence from HIP paper to order HIP boxes. — SolveCongruence","title":"Solve system of linear congruence from HIP paper to order HIP boxes. — SolveCongruence","text":"See page 5 Robertson et al. 2018 Halton Iterative Partitioning. essentially internal function worried .","code":""},{"path":"/reference/SolveCongruence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve system of linear congruence from HIP paper to order HIP boxes. — SolveCongruence","text":"","code":"SolveCongruence(A, base, J)"},{"path":"/reference/SolveCongruence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve system of linear congruence from HIP paper to order HIP boxes. — SolveCongruence","text":"Matrix numeric computational reasons a_i solutions HIP boxes. base Co-prime Base generally BAS work 2 3. J Integer 2 values represent numbers 2^J1, 3^J2.","code":""},{"path":"/reference/SolveCongruence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve system of linear congruence from HIP paper to order HIP boxes. — SolveCongruence","text":"numeric vector.","code":""},{"path":"/reference/SolveCongruence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve system of linear congruence from HIP paper to order HIP boxes. — SolveCongruence","text":"function first written Paul van Dam-Bates package BASMasterSample.","code":""},{"path":"/reference/SpacialBalanceMeasures.html","id":null,"dir":"Reference","previous_headings":"","what":"Do something useful. — SpacialBalanceMeasures","title":"Do something useful. — SpacialBalanceMeasures","text":"description useful function.","code":""},{"path":"/reference/SpacialBalanceMeasures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do something useful. — SpacialBalanceMeasures","text":"","code":"SpacialBalanceMeasures(parm1)"},{"path":"/reference/SpacialBalanceMeasures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do something useful. — SpacialBalanceMeasures","text":"parm1 parameter.","code":""},{"path":"/reference/SpacialBalanceMeasures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do something useful. — SpacialBalanceMeasures","text":"something useful.","code":""},{"path":"/reference/SpatialStratification.html","id":null,"dir":"Reference","previous_headings":"","what":"Do something useful. — SpatialStratification","title":"Do something useful. — SpatialStratification","text":"description useful function.","code":""},{"path":"/reference/SpatialStratification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do something useful. — SpatialStratification","text":"","code":"SpatialStratification(parm1)"},{"path":"/reference/SpatialStratification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do something useful. — SpatialStratification","text":"parm1 parameter.","code":""},{"path":"/reference/SpatialStratification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do something useful. — SpatialStratification","text":"something useful.","code":""},{"path":"/reference/ValidatePanelDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the panels and panel_overlap parameters. — ValidatePanelDesign","title":"Validate the panels and panel_overlap parameters. — ValidatePanelDesign","text":"function used validate panels panel_overlap parameters. panel_design flag set TRUE panels /panel_overlap parameters NULL. internal function.","code":""},{"path":"/reference/ValidatePanelDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the panels and panel_overlap parameters. — ValidatePanelDesign","text":"","code":"ValidatePanelDesign(panels, panel_overlap, n)"},{"path":"/reference/ValidatePanelDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the panels and panel_overlap parameters. — ValidatePanelDesign","text":"panels list integers define size panel non-overlapping panels design. length list determines number panels required. sum integers panels parameter determine total number samples selected, n. default value panels NULL, indicates non-overlapping panel design wanted. panel_overlap list integers define overlap previous panel. used panels parameter NULL. default value panel_overlap NULL. length panel_overlap must equal length panels. first value always forced zero first panel never overlaps region. n number samples required. used panels panel_overlap NULL.","code":""},{"path":"/reference/ValidatePanelDesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the panels and panel_overlap parameters. — ValidatePanelDesign","text":"Returns list following variables: n panel_design number_panels panel_overlap","code":""},{"path":"/reference/ValidatePanelDesign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate the panels and panel_overlap parameters. — ValidatePanelDesign","text":"function written Phil Davies.","code":""},{"path":"/reference/VarianceEstimators.html","id":null,"dir":"Reference","previous_headings":"","what":"Do something useful. — VarianceEstimators","title":"Do something useful. — VarianceEstimators","text":"description useful function.","code":""},{"path":"/reference/VarianceEstimators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do something useful. — VarianceEstimators","text":"","code":"VarianceEstimators(parm1)"},{"path":"/reference/VarianceEstimators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do something useful. — VarianceEstimators","text":"parm1 parameter.","code":""},{"path":"/reference/VarianceEstimators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do something useful. — VarianceEstimators","text":"something useful.","code":""},{"path":"/reference/compareBoxesBoxInit.html","id":null,"dir":"Reference","previous_headings":"","what":"title. — compareBoxesBoxInit","title":"title. — compareBoxesBoxInit","text":"description.","code":""},{"path":"/reference/compareBoxesBoxInit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"title. — compareBoxesBoxInit","text":"","code":"compareBoxesBoxInit(boxes, boxInit, intB)"},{"path":"/reference/compareBoxesBoxInit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"title. — compareBoxesBoxInit","text":"boxes bla. boxInit bla. intB bla.","code":""},{"path":"/reference/compareBoxesBoxInit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"title. — compareBoxesBoxInit","text":"numeric vector.","code":""},{"path":"/reference/compareBoxesBoxInit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"title. — compareBoxesBoxInit","text":"function written Phil Davies.","code":""},{"path":"/reference/contains_feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the sf object contains a specified feature. — contains_feature","title":"Check if the sf object contains a specified feature. — contains_feature","text":"Used check simple file object contains feature. internal function.","code":""},{"path":"/reference/contains_feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the sf object contains a specified feature. — contains_feature","text":"","code":"contains_feature(sf_object, feature_name)"},{"path":"/reference/contains_feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the sf object contains a specified feature. — contains_feature","text":"sf_object Simple file object want verify contains feature called feature_name. feature_name feature name want find simple file object sf_object.","code":""},{"path":"/reference/contains_feature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the sf object contains a specified feature. — contains_feature","text":"Returns TRUE simple file object sf_object contains feature feature_name. Otherwise FALSE returned.","code":""},{"path":"/reference/contains_feature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if the sf object contains a specified feature. — contains_feature","text":"function written Phil Davies.","code":""},{"path":"/reference/contains_feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the sf object contains a specified feature. — contains_feature","text":"","code":"if (FALSE) { # Check if a feature is available in a shapefile. containsFeature <- contains_feature(shapefile, \"NAME\") }"},{"path":"/reference/cppBASMasterSample.html","id":null,"dir":"Reference","previous_headings":"","what":"A placeholder for now. — cppBASMasterSample","title":"A placeholder for now. — cppBASMasterSample","text":"placeholder now.","code":""},{"path":"/reference/cppBASMasterSample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A placeholder for now. — cppBASMasterSample","text":"Nothing moment.","code":""},{"path":"/reference/cppBASMasterSample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A placeholder for now. — cppBASMasterSample","text":"function written Phil Davies.","code":""},{"path":"/reference/cppBASMastersample.html","id":null,"dir":"Reference","previous_headings":"","what":"cppBASMastersample — cppBASMastersample","title":"cppBASMastersample — cppBASMastersample","text":"placeholder now.","code":""},{"path":"/reference/cppBASMastersample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cppBASMastersample — cppBASMastersample","text":"Nothing.","code":""},{"path":"/reference/cppBASpts.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate numbers from a Halton Sequence. — cppBASpts","title":"Generate numbers from a Halton Sequence. — cppBASpts","text":"efficiency, function can generate points along random start Halton Sequence predefined Halton.","code":""},{"path":"/reference/cppBASpts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate numbers from a Halton Sequence. — cppBASpts","text":"","code":"cppBASpts(n = 10L, seeds = as.integer(c()), bases = as.numeric(c()))"},{"path":"/reference/cppBASpts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate numbers from a Halton Sequence. — cppBASpts","text":"n Number points required seeds Random starting point dimension bases Co-prime base Halton Sequence","code":""},{"path":"/reference/cppBASpts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate numbers from a Halton Sequence. — cppBASpts","text":"Matrix columns, order points, x [0,1) y [0,1)","code":""},{"path":"/reference/cppBASpts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate numbers from a Halton Sequence. — cppBASpts","text":"function first written R Blair Robertson, subsequently re-written C/C++ Phil Davies.","code":""},{"path":"/reference/cppBASpts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate numbers from a Halton Sequence. — cppBASpts","text":"","code":"# First 10 points in the Halton Sequence for base 2,3 uc511::cppBASpts(n = 10) #> cppBASpts() seeds : 55846 54222 #> $pts #>             [,1]       [,2] #>  [1,] 0.39201355 0.23698962 #>  [2,] 0.89201355 0.57032295 #>  [3,] 0.07951355 0.90365629 #>  [4,] 0.57951355 0.05180443 #>  [5,] 0.32951355 0.38513777 #>  [6,] 0.82951355 0.71847110 #>  [7,] 0.20451355 0.16291554 #>  [8,] 0.70451355 0.49624888 #>  [9,] 0.45451355 0.82958221 #> [10,] 0.95451355 0.27402666 #>  #> $xklist #> $xklist[[1]] #> [1] 0.0 0.5 #>  #> $xklist[[2]] #> [1] 0.0000000 0.3333333 0.6666667 #>  #>  #> $seeds #> [1] 55846 54222 #>  # First 10 points in the Halton Sequence for base 2,3 with # starting point at the 15th and 22nd index. uc511::cppBASpts(n = 10, seeds = c(14, 21)) #> cppBASpts() seeds : 14 21 #> $pts #>          [,1]       [,2] #>  [1,] 0.43750 0.18518519 #>  [2,] 0.93750 0.51851852 #>  [3,] 0.03125 0.85185185 #>  [4,] 0.53125 0.29629630 #>  [5,] 0.28125 0.62962963 #>  [6,] 0.78125 0.96296296 #>  [7,] 0.15625 0.01234568 #>  [8,] 0.65625 0.34567901 #>  [9,] 0.40625 0.67901235 #> [10,] 0.90625 0.12345679 #>  #> $xklist #> $xklist[[1]] #> [1] 0.0 0.5 #>  #> $xklist[[2]] #> [1] 0.0000000 0.3333333 0.6666667 #>  #>  #> $seeds #> [1] 14 21 #>"},{"path":"/reference/cppHaltonSeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Halton Sequence values for a single dimension. — cppHaltonSeq","title":"Draw Halton Sequence values for a single dimension. — cppHaltonSeq","text":"Note borrowed Internet implementation.","code":""},{"path":"/reference/cppHaltonSeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Halton Sequence values for a single dimension. — cppHaltonSeq","text":"","code":"cppHaltonSeq(k, base, n)"},{"path":"/reference/cppHaltonSeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Halton Sequence values for a single dimension. — cppHaltonSeq","text":"k integer starting index k >= 0. base Co-prime Base generally BAS work 2 3. n Number samples draw.","code":""},{"path":"/reference/cppHaltonSeq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Halton Sequence values for a single dimension. — cppHaltonSeq","text":"Halton sequence size n.","code":""},{"path":"/reference/cppHaltonSeq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw Halton Sequence values for a single dimension. — cppHaltonSeq","text":"function first written Paul van Dam-Bates package BASMasterSample.","code":""},{"path":"/reference/cppHaltonSeq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Halton Sequence values for a single dimension. — cppHaltonSeq","text":"","code":"uc511::cppHaltonSeq(k = 0, base = 2, n = 10) #>  [1] 0.0000 0.5000 0.2500 0.7500 0.1250 0.6250 0.3750 0.8750 0.0625 0.5625"},{"path":"/reference/cppProductPoweredElements.html","id":null,"dir":"Reference","previous_headings":"","what":"Raise each element in a vector by a corresponding power provided in another vector,\nthen return the product of all the results. — cppProductPoweredElements","title":"Raise each element in a vector by a corresponding power provided in another vector,\nthen return the product of all the results. — cppProductPoweredElements","text":"Raise element vector corresponding power provided another vector, return product results.","code":""},{"path":"/reference/cppProductPoweredElements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raise each element in a vector by a corresponding power provided in another vector,\nthen return the product of all the results. — cppProductPoweredElements","text":"","code":"cppProductPoweredElements(J, bases, numElements)"},{"path":"/reference/cppProductPoweredElements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raise each element in a vector by a corresponding power provided in another vector,\nthen return the product of all the results. — cppProductPoweredElements","text":"J numeric vector values raise corresponding element bases . bases numeric vector containing values raised corresponding powers J. numElements number elements numeric vector bases. might dispense parameter later stage.","code":""},{"path":"/reference/cppProductPoweredElements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raise each element in a vector by a corresponding power provided in another vector,\nthen return the product of all the results. — cppProductPoweredElements","text":"product powers.","code":""},{"path":"/reference/cppProductPoweredElements.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Raise each element in a vector by a corresponding power provided in another vector,\nthen return the product of all the results. — cppProductPoweredElements","text":"function written Phil Davies.","code":""},{"path":"/reference/cppProductPoweredElements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raise each element in a vector by a corresponding power provided in another vector,\nthen return the product of all the results. — cppProductPoweredElements","text":"","code":"# calculate the product of the powered elements uc511::cppProductPoweredElements(c(1, 2, 3), c(3, 2, 1), 3) #> [1] 12"},{"path":"/reference/cppRSHalton.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate numbers from a Halton Sequence with a random start — cppRSHalton","title":"Generate numbers from a Halton Sequence with a random start — cppRSHalton","text":"efficiency, function can generate points along random start Halton Sequence predefined Halton.","code":""},{"path":"/reference/cppRSHalton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate numbers from a Halton Sequence with a random start — cppRSHalton","text":"","code":"cppRSHalton(   n = 10L,   seeds = as.integer(c()),   bases = as.numeric(c()),   boxes = as.numeric(c()),   J = as.numeric(c()) )"},{"path":"/reference/cppRSHalton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate numbers from a Halton Sequence with a random start — cppRSHalton","text":"n Number points required seeds Random starting point dimension bases Co-prime base Halton Sequence boxes Halton boxes points required generated J Defines Halton frame, relates number boxes used.","code":""},{"path":"/reference/cppRSHalton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate numbers from a Halton Sequence with a random start — cppRSHalton","text":"Matrix columns, order point, x [0,1) y [0,1)","code":""},{"path":"/reference/cppRSHalton.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate numbers from a Halton Sequence with a random start — cppRSHalton","text":"function first written R Paul van Dam-Bates package BASMasterSample. Subsequently written C/C++ Phil Davies.","code":""},{"path":"/reference/cppRSHalton.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate numbers from a Halton Sequence with a random start — cppRSHalton","text":"","code":"# First 10 points in the Halton Sequence for base 2,3 uc511::cppRSHalton(n = 10) #>       [,1]   [,2]       [,3] #>  [1,]    1 0.0000 0.00000000 #>  [2,]    2 0.5000 0.33333333 #>  [3,]    3 0.2500 0.66666667 #>  [4,]    4 0.7500 0.11111111 #>  [5,]    5 0.1250 0.44444444 #>  [6,]    6 0.6250 0.77777778 #>  [7,]    7 0.3750 0.22222222 #>  [8,]    8 0.8750 0.55555556 #>  [9,]    9 0.0625 0.88888889 #> [10,]   10 0.5625 0.03703704 # First 10 points in the Halton Sequence for base 2,3 with # starting point at the 15th and 22nd index. uc511::cppRSHalton(n = 10, seeds = c(14, 21)) #>       [,1]    [,2]       [,3] #>  [1,]    1 0.43750 0.18518519 #>  [2,]    2 0.93750 0.51851852 #>  [3,]    3 0.03125 0.85185185 #>  [4,]    4 0.53125 0.29629630 #>  [5,]    5 0.28125 0.62962963 #>  [6,]    6 0.78125 0.96296296 #>  [7,]    7 0.15625 0.01234568 #>  [8,]    8 0.65625 0.34567901 #>  [9,]    9 0.40625 0.67901235 #> [10,]   10 0.90625 0.12345679"},{"path":"/reference/cppRSHalton_br.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate numbers from a Halton Sequence with a random start — cppRSHalton_br","title":"Generate numbers from a Halton Sequence with a random start — cppRSHalton_br","text":"efficiency, function can generate points along random start Halton Sequence predefined Halton.","code":""},{"path":"/reference/cppRSHalton_br.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate numbers from a Halton Sequence with a random start — cppRSHalton_br","text":"","code":"cppRSHalton_br(n = 10L, bases = as.numeric(c()), seeds = as.numeric(c()))"},{"path":"/reference/cppRSHalton_br.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate numbers from a Halton Sequence with a random start — cppRSHalton_br","text":"n Number points required bases Co-prime base Halton Sequence seeds Random starting point dimension","code":""},{"path":"/reference/cppRSHalton_br.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate numbers from a Halton Sequence with a random start — cppRSHalton_br","text":"Matrix columns, order point, x [0,1) y [0,1).","code":""},{"path":"/reference/cppRSHalton_br.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate numbers from a Halton Sequence with a random start — cppRSHalton_br","text":"function first written R Paul van Dam-Bates package BASMasterSample. Subsequently written C/C++ Phil Davies.","code":""},{"path":"/reference/cppRSHalton_br.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate numbers from a Halton Sequence with a random start — cppRSHalton_br","text":"","code":"# First 10 points in the Halton Sequence for base 2,3  uc511::cppRSHalton_br(n = 10) #> $pts #>             [,1]       [,2] #>  [1,] 0.27751045 0.57243508 #>  [2,] 0.77751045 0.90576841 #>  [3,] 0.15251045 0.05391656 #>  [4,] 0.65251045 0.38724990 #>  [5,] 0.40251045 0.72058323 #>  [6,] 0.90251045 0.16502767 #>  [7,] 0.09001045 0.49836101 #>  [8,] 0.59001045 0.83169434 #>  [9,] 0.34001045 0.27613878 #> [10,] 0.84001045 0.60947212 #>  #> $xklist #> $xklist[[1]] #> [1] 0.0 0.5 #>  #> $xklist[[2]] #> [1] 0.0000000 0.3333333 0.6666667 #>  #>  #> $seeds #> numeric(0) #>  # First 10 points in the Halton Sequence for base 2,3 with # starting point at the 15th and 22nd index.  uc511::cppRSHalton_br(n = 10, seeds = c(14, 21)) #> $pts #>          [,1]       [,2] #>  [1,] 0.43750 0.18518519 #>  [2,] 0.93750 0.51851852 #>  [3,] 0.03125 0.85185185 #>  [4,] 0.53125 0.29629630 #>  [5,] 0.28125 0.62962963 #>  [6,] 0.78125 0.96296296 #>  [7,] 0.15625 0.01234568 #>  [8,] 0.65625 0.34567901 #>  [9,] 0.40625 0.67901235 #> [10,] 0.90625 0.12345679 #>  #> $xklist #> $xklist[[1]] #> [1] 0.0 0.5 #>  #> $xklist[[2]] #> [1] 0.0000000 0.3333333 0.6666667 #>  #>  #> $seeds #> [1] 14 21 #>"},{"path":"/reference/cppWhere2Start.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to find the ordering of the first box according to the random seed. — cppWhere2Start","title":"Internal function to find the ordering of the first box according to the random seed. — cppWhere2Start","text":"function find Halton Box initial BAS point Master Sample falls thus use order remaining boxes based initial. also helps us tracks master sample index skip boxes resource.","code":""},{"path":"/reference/cppWhere2Start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to find the ordering of the first box according to the random seed. — cppWhere2Start","text":"","code":"cppWhere2Start(J, seeds, bases, boxes)"},{"path":"/reference/cppWhere2Start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to find the ordering of the first box according to the random seed. — cppWhere2Start","text":"J Definition number grid cells Halton frame. seeds Master Sample random seed. bases Co-prime bases really always 2,3 boxes ordering boxes clipped reordered according master sample seed.","code":""},{"path":"/reference/cppWhere2Start.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to find the ordering of the first box according to the random seed. — cppWhere2Start","text":"vector reordered Halton indices.","code":""},{"path":"/reference/cppWhere2Start.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal function to find the ordering of the first box according to the random seed. — cppWhere2Start","text":"function first written R Paul van Dam-Bates package BASMasterSample. Subsequently written C/C++ Phil Davies.","code":""},{"path":"/reference/getBAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Select points from a polygon using a BAS Master Sample. — getBAS","title":"Select points from a polygon using a BAS Master Sample. — getBAS","text":"main function selecting sites using BAS master sample. assumes already defined master sample using BoundingBox() function selecting marine master sample site BC.","code":""},{"path":"/reference/getBAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select points from a polygon using a BAS Master Sample. — getBAS","text":"","code":"getBAS(   shp,   n = 100,   bb = NULL,   panels = NULL,   stratum = NULL,   nExtra = 1000,   quiet = FALSE,   inclSeed = NULL )"},{"path":"/reference/getBAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select points from a polygon using a BAS Master Sample. — getBAS","text":"shp Shape file polygon (sp sf) select sites . n Number sites select. using stratification named vector containing sample sizes group. bb Bounding box defines Master Sample. Default BC Marine Master Sample. panels list integers define size panel non-overlapping panels design. length list determines number panels required. sum integers panels parameter determine total number samples selected, n. default value panels NULL, indicates non-overlapping panel design wanted. stratum Name column data.frame attached shapefile makes strata. nExtra efficiency problem many extra samples draw spatial clipping shp. quiet Boolean want see output printed screen. Helpful taking long time. inclSeed Boolean need something ","code":""},{"path":"/reference/getBAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select points from a polygon using a BAS Master Sample. — getBAS","text":"master sample.","code":""},{"path":"/reference/getBAS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select points from a polygon using a BAS Master Sample. — getBAS","text":"function first written Paul van Dam-Bates package BASMasterSample.","code":""},{"path":"/reference/getBAS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select points from a polygon using a BAS Master Sample. — getBAS","text":"","code":"if (FALSE) { data(Fed_MPAs_clipped) # Sample sizes for each stratum: # chose how many sites in each polygon in the dataset N_Zone <- c(\"Adaptive Management Zone\" = 30, \"Marine\" = 20, \"Other\" = 40) # Rename the NA value as the function does not accept NA at the moment. Fed_MPAs_clipped$ZONEDESC_E[is.na(Fed_MPAs_clipped$ZONEDESC_E)] <- \"Other\" # Core Protection is totally within Adaptive Management Zone. Remove it or # make it explicit that it is different. shp.MPAs <- Fed_MPAs_clipped[Fed_MPAs_clipped$ZONEDESC_E != \"Core Protection Zone\", ] # Select the Master Sample sites: smp.str <- uc511::getBAS(shp.MPAs, N = N_Zone, stratum = \"ZONEDESC_E\", quiet = FALSE) plot(sf::st_geometry(shp.MPAs)) plot(sf::st_geometry(smp.str), add = T, col= \"red\", pch = 16) }"},{"path":"/reference/getBASMasterSample.html","id":null,"dir":"Reference","previous_headings":"","what":"Select points from a polygon using a BAS Master Sample. — getBASMasterSample","title":"Select points from a polygon using a BAS Master Sample. — getBASMasterSample","text":"main function selecting sites using BAS master sample. assumes already defined master sample using buildMS() function selecting marine master sample site BC.","code":""},{"path":"/reference/getBASMasterSample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select points from a polygon using a BAS Master Sample. — getBASMasterSample","text":"","code":"getBASMasterSample(   shp,   n = 100,   bb = NULL,   stratum = NULL,   nExtra = 1000,   quiet = FALSE,   inclSeed = NULL )"},{"path":"/reference/getBASMasterSample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select points from a polygon using a BAS Master Sample. — getBASMasterSample","text":"shp Shape file polygon (sp sf) select sites . n Number sites select. using stratification named vector containing sample sizes group. bb Bounding box defines Master Sample. Default BC Marine Master Sample. stratum Name column data.frame attached shapefile makes strata. nExtra efficiency problem many extra samples draw spatial clipping shp. quiet Boolean want see output printed screen. Helpful taking long time. inclSeed Boolean need something ","code":""},{"path":"/reference/getBASMasterSample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select points from a polygon using a BAS Master Sample. — getBASMasterSample","text":"master sample.","code":""},{"path":"/reference/getBASMasterSample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select points from a polygon using a BAS Master Sample. — getBASMasterSample","text":"function first written Paul van Dam-Bates package BASMasterSample.","code":""},{"path":"/reference/getBASMasterSample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select points from a polygon using a BAS Master Sample. — getBASMasterSample","text":"","code":"if (FALSE) { data(Fed_MPAs_clipped) # Sample sizes for each stratum: # chose how many sites in each polygon in the dataset N_Zone <- c(\"Adaptive Management Zone\" = 30, \"Marine\" = 20, \"Other\" = 40) # Rename the NA value as the function does not accept NA at the moment. Fed_MPAs_clipped$ZONEDESC_E[is.na(Fed_MPAs_clipped$ZONEDESC_E)] <- \"Other\" # Core Protection is totally within Adaptive Management Zone. Remove it or # make it explicit that it is different. shp.MPAs <- Fed_MPAs_clipped[Fed_MPAs_clipped$ZONEDESC_E != \"Core Protection Zone\", ] # Select the Master Sample sites: smp.str <- uc511::getBASMasterSample(shp.MPAs, N = N_Zone, stratum = \"ZONEDESC_E\", quiet = FALSE) plot(sf::st_geometry(shp.MPAs)) plot(sf::st_geometry(smp.str), add = T, col= \"red\", pch = 16) }"},{"path":"/reference/getBB.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the bounding box for other functions. — getBB","title":"Get the bounding box for other functions. — getBB","text":"Bounding box NAD83/BC Albers.","code":""},{"path":"/reference/getBB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the bounding box for other functions. — getBB","text":"","code":"getBB()"},{"path":"/reference/getBB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the bounding box for other functions. — getBB","text":"bounding box.","code":""},{"path":"/reference/getBB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the bounding box for other functions. — getBB","text":"function first written Paul van Dam-Bates package BASMasterSample later ported package, uc511.","code":""},{"path":"/reference/getIndividualBoxIndices.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Halton Box Index for a point. — getIndividualBoxIndices","title":"Get the Halton Box Index for a point. — getIndividualBoxIndices","text":"pass discrete points function return Halton Index according Master Sample defined bounding box. points closer together defined box size treated sample unit. expect spatially balanced recommend using function alone select sample.","code":""},{"path":"/reference/getIndividualBoxIndices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Halton Box Index for a point. — getIndividualBoxIndices","text":"","code":"getIndividualBoxIndices(pts, J = NULL, bb, size = 100)"},{"path":"/reference/getIndividualBoxIndices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Halton Box Index for a point. — getIndividualBoxIndices","text":"pts Shape file polygon (sp sf) generate boxes . J Definition number grid cells Halton frame. bb Bounding box defines Master Sample. Default BC Marine Master Sample. size Physical target size Halton boxes (square ish) J NULL.","code":""},{"path":"/reference/getIndividualBoxIndices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Halton Box Index for a point. — getIndividualBoxIndices","text":"Return Halton Index \"pts\" passed function.","code":""},{"path":"/reference/getIndividualBoxIndices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the Halton Box Index for a point. — getIndividualBoxIndices","text":"function first written Paul van Dam-Bates package BASMasterSample.","code":""},{"path":"/reference/getIndividualBoxIndices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Halton Box Index for a point. — getIndividualBoxIndices","text":"","code":"if (FALSE) { library(bcmaps) # If you haven't already installed this: install.packages('bcmapsdata', repos='https://bcgov.github.io/drat/') library(bcmapsdata) cities <- bcmaps::get_layer(\"bc_cities\") bb <- uc511::BoundingBox(cities, d = 2, FALSE) # For visibility will make boxes 10 km cities.ord <- uc511::getIndividualBoxIndices(pts = cities, bb = bb, size = 100) plot(st_geometry(cities), pch = 20) plot(st_geometry(cities.ord[rank(cities.ord$HaltonIndex) < 15,]), add= TRUE, col = \"red\", cex = 1.5) }"},{"path":"/reference/getOverlappedPoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Select points from a polygon using a BAS Master Sample. — getOverlappedPoints","title":"Select points from a polygon using a BAS Master Sample. — getOverlappedPoints","text":"main function selecting sites using BAS master sample. assumes already defined master sample using BoundingBox() function selecting marine master sample site BC.","code":""},{"path":"/reference/getOverlappedPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select points from a polygon using a BAS Master Sample. — getOverlappedPoints","text":"","code":"getOverlappedPoints(shapefile, panelid)"},{"path":"/reference/getOverlappedPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select points from a polygon using a BAS Master Sample. — getOverlappedPoints","text":"shapefile Shape file polygon (sp sf) containing sample contains feature column named panel_id. panelid overlapped panel shapefile shp user wants sample points .","code":""},{"path":"/reference/getOverlappedPoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select points from a polygon using a BAS Master Sample. — getOverlappedPoints","text":"sample specified panel.","code":""},{"path":"/reference/getOverlappedPoints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select points from a polygon using a BAS Master Sample. — getOverlappedPoints","text":"function written Phil Davies.","code":""},{"path":"/reference/getOverlappedPoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select points from a polygon using a BAS Master Sample. — getOverlappedPoints","text":"","code":"if (FALSE) { # Get all the sample from panel 1. panelid <- 1 panel_1 <- uc511::getOverlappedPoints(shp, panelid) }"},{"path":"/reference/getPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"Select points from a polygon using a BAS Master Sample. — getPanel","title":"Select points from a polygon using a BAS Master Sample. — getPanel","text":"main function selecting sites using BAS master sample. assumes already defined master sample using BoundingBox() function selecting marine master sample site BC.","code":""},{"path":"/reference/getPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select points from a polygon using a BAS Master Sample. — getPanel","text":"","code":"getPanel(shapefile, panelid)"},{"path":"/reference/getPanel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select points from a polygon using a BAS Master Sample. — getPanel","text":"shapefile Shape file polygon (sp sf) containing sample contains feature column named panel_id. panelid overlapped panel shapefile shp user wants sample points .","code":""},{"path":"/reference/getPanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select points from a polygon using a BAS Master Sample. — getPanel","text":"sample specified panel.","code":""},{"path":"/reference/getPanel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select points from a polygon using a BAS Master Sample. — getPanel","text":"function written Phil Davies.","code":""},{"path":"/reference/getPanel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select points from a polygon using a BAS Master Sample. — getPanel","text":"","code":"if (FALSE) { # Get all the sample from panel 1. panelid <- 1 panel_1 <- uc511::getPanel(shp, panelid) }"},{"path":"/reference/getProj.html","id":null,"dir":"Reference","previous_headings":"","what":"Define spatial objects in projection of the master sample. — getProj","title":"Define spatial objects in projection of the master sample. — getProj","text":"Default projection master sample. Needed consistency entire bounding box.","code":""},{"path":"/reference/getProj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define spatial objects in projection of the master sample. — getProj","text":"","code":"getProj()"},{"path":"/reference/getProj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define spatial objects in projection of the master sample. — getProj","text":"Spatial object projection.","code":""},{"path":"/reference/getProj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define spatial objects in projection of the master sample. — getProj","text":"function first written Paul van Dam-Bates package BASMasterSample later ported package, uc511.","code":""},{"path":"/reference/getRotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the radians of rotation of the bounding box. — getRotation","title":"Returns the radians of rotation of the bounding box. — getRotation","text":"Defines random rotation specific Western Canada Marine Master Sample.","code":""},{"path":"/reference/getRotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the radians of rotation of the bounding box. — getRotation","text":"","code":"getRotation()"},{"path":"/reference/getRotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the radians of rotation of the bounding box. — getRotation","text":"radians rotation bounding box.","code":""},{"path":"/reference/getRotation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Returns the radians of rotation of the bounding box. — getRotation","text":"function first written Paul van Dam-Bates package BASMasterSample later ported package, uc511.","code":""},{"path":"/reference/getSeed.html","id":null,"dir":"Reference","previous_headings":"","what":"Random seed definition for Western Canada Marine Master Sample. — getSeed","title":"Random seed definition for Western Canada Marine Master Sample. — getSeed","text":"Defines random seed specific Western Canada Marine Master Sample.","code":""},{"path":"/reference/getSeed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random seed definition for Western Canada Marine Master Sample. — getSeed","text":"","code":"getSeed()"},{"path":"/reference/getSeed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random seed definition for Western Canada Marine Master Sample. — getSeed","text":"random seeds Western Canada Marine Master Sample.","code":""},{"path":"/reference/getSeed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Random seed definition for Western Canada Marine Master Sample. — getSeed","text":"function first written Paul van Dam-Bates package BASMasterSample later ported package, uc511.","code":""},{"path":"/reference/hipIndexRandomPermutation.html","id":null,"dir":"Reference","previous_headings":"","what":"A title. — hipIndexRandomPermutation","title":"A title. — hipIndexRandomPermutation","text":"description.","code":""},{"path":"/reference/hipIndexRandomPermutation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A title. — hipIndexRandomPermutation","text":"","code":"hipIndexRandomPermutation(its)"},{"path":"/reference/hipIndexRandomPermutation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A title. — hipIndexRandomPermutation","text":"parm.","code":""},{"path":"/reference/hipIndexRandomPermutation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A title. — hipIndexRandomPermutation","text":"list containing following variables: permHaltonIndex - output.","code":""},{"path":"/reference/hipIndexRandomPermutation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A title. — hipIndexRandomPermutation","text":"details.","code":""},{"path":"/reference/hipPartition.html","id":null,"dir":"Reference","previous_headings":"","what":"A title. — hipPartition","title":"A title. — hipPartition","text":"description.","code":""},{"path":"/reference/hipPartition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A title. — hipPartition","text":"","code":"hipPartition(pts, its)"},{"path":"/reference/hipPartition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A title. — hipPartition","text":"pts parm. parm.","code":""},{"path":"/reference/hipPartition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A title. — hipPartition","text":"list containing following variables: ptsIndex    - output. HaltonIndex - Updated Halton indices points pts.","code":""},{"path":"/reference/hipPartition.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A title. — hipPartition","text":"details.","code":""},{"path":"/reference/hipX1split.html","id":null,"dir":"Reference","previous_headings":"","what":"A title. — hipX1split","title":"A title. — hipX1split","text":"description.","code":""},{"path":"/reference/hipX1split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A title. — hipX1split","text":"","code":"hipX1split(x1pts, HaltonIndex, BoxIndex, xlevel, x1Hpts)"},{"path":"/reference/hipX1split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A title. — hipX1split","text":"x1pts parm. HaltonIndex Halton indices points x1Hpts. BoxIndex parm. xlevel parm. x1Hpts parm.","code":""},{"path":"/reference/hipX1split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A title. — hipX1split","text":"list containing following variables: HaltonIndex - Updated Halton indices points x1Hpts.","code":""},{"path":"/reference/hipX1split.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A title. — hipX1split","text":"details.","code":""},{"path":"/reference/hipX2split.html","id":null,"dir":"Reference","previous_headings":"","what":"A title. — hipX2split","title":"A title. — hipX2split","text":"description.","code":""},{"path":"/reference/hipX2split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A title. — hipX2split","text":"","code":"hipX2split(x2pts, HaltonIndex, BoxIndex, xlevel, x2Hpts)"},{"path":"/reference/hipX2split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A title. — hipX2split","text":"x2pts parm. HaltonIndex Halton indices points x2Hpts. BoxIndex parm. xlevel parm. x2Hpts parm.","code":""},{"path":"/reference/hipX2split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A title. — hipX2split","text":"list containing following variables: HaltonIndex - Updated Halton indices points x2Hpts.","code":""},{"path":"/reference/hipX2split.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A title. — hipX2split","text":"details.","code":""},{"path":"/reference/is_sf_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is an sf points object. — is_sf_points","title":"Check if an object is an sf points object. — is_sf_points","text":"Tests object passed function sf points object . internal function.","code":""},{"path":"/reference/is_sf_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is an sf points object. — is_sf_points","text":"","code":"is_sf_points(x)"},{"path":"/reference/is_sf_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is an sf points object. — is_sf_points","text":"x probable sf points object.","code":""},{"path":"/reference/is_sf_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is an sf points object. — is_sf_points","text":"Either TRUE FALSE.","code":""},{"path":"/reference/is_sf_points.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if an object is an sf points object. — is_sf_points","text":"Detect object sf points object .","code":""},{"path":"/reference/log_a_to_base_b.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log of a to base b. — log_a_to_base_b","title":"Compute the log of a to base b. — log_a_to_base_b","text":"Compute log base b.","code":""},{"path":"/reference/log_a_to_base_b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log of a to base b. — log_a_to_base_b","text":"","code":"log_a_to_base_b(a, b)"},{"path":"/reference/log_a_to_base_b.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log of a to base b. — log_a_to_base_b","text":"Integer find log base b . b Base","code":""},{"path":"/reference/log_a_to_base_b.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log of a to base b. — log_a_to_base_b","text":"log base b.","code":""},{"path":"/reference/log_a_to_base_b.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the log of a to base b. — log_a_to_base_b","text":"function written Phil Davies.","code":""},{"path":"/reference/log_a_to_base_b.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the log of a to base b. — log_a_to_base_b","text":"","code":"# calculate log of a to base b. log_a_to_base_b(2, 4) #> [1] 0.5"},{"path":"/reference/makeFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Halton Frame raster, defined in sf based on the bounding box master sample. — makeFrame","title":"Create a Halton Frame raster, defined in sf based on the bounding box master sample. — makeFrame","text":"Make Halton Frame based B = 2^J[1]*3^J[2] grid cells. rotation required, return rotated. function internal function simply select sub BAS points without spatial clipping point level.","code":""},{"path":"/reference/makeFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Halton Frame raster, defined in sf based on the bounding box master sample. — makeFrame","text":"","code":"makeFrame(base = c(2, 3), J = c(2, 2), bb, rotate = FALSE)"},{"path":"/reference/makeFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Halton Frame raster, defined in sf based on the bounding box master sample. — makeFrame","text":"base Co-prime base BAS, change 2,3. J Definition number grid cells Halton frame. bb Bounding box shapefile centroid, random seed, rotation. rotate Boolean want rotate shape exporting.","code":""},{"path":"/reference/makeFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Halton Frame raster, defined in sf based on the bounding box master sample. — makeFrame","text":"rotated sf spatial object.","code":""},{"path":"/reference/makeFrame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Halton Frame raster, defined in sf based on the bounding box master sample. — makeFrame","text":"function first written Paul van Dam-Bates package BASMasterSample.","code":""},{"path":"/reference/makeFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Halton Frame raster, defined in sf based on the bounding box master sample. — makeFrame","text":"","code":"if (FALSE) { bb <- uc511::getBB() haltonFrame <- uc511::makeFrame(J = c(8,4), bb = bb) }"},{"path":"/reference/masterSampleSelect.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate sample points using BAS master sample. — masterSampleSelect","title":"Generate sample points using BAS master sample. — masterSampleSelect","text":"function features generally expected run wrapper function, BAS ensures correct pieces passed adds additional feature stratification.","code":""},{"path":"/reference/masterSampleSelect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate sample points using BAS master sample. — masterSampleSelect","text":"","code":"masterSampleSelect(   shp,   n = 100,   bb = NULL,   nExtra = 0,   printJ = FALSE,   inclSeed = NULL )"},{"path":"/reference/masterSampleSelect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate sample points using BAS master sample. — masterSampleSelect","text":"shp Shape file polygon select sites . n Number sites select. bb Bounding box defines Master Sample. Default BC Marine Master Sample. nExtra efficiency problem many extra samples draw spatial clipping shp. printJ Boolean want see J, many cuts space required generate sample efficiently. inclSeed list seeds, u1 u2, specified user.","code":""},{"path":"/reference/masterSampleSelect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate sample points using BAS master sample. — masterSampleSelect","text":"Sample points.","code":""},{"path":"/reference/masterSampleSelect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate sample points using BAS master sample. — masterSampleSelect","text":"function first written Paul van Dam-Bates package BASMasterSample.","code":""},{"path":"/reference/point2Frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Halton Boxes around a point resource ordered by BAS Master Sample. — point2Frame","title":"Get the Halton Boxes around a point resource ordered by BAS Master Sample. — point2Frame","text":"Get Halton Boxes around point resource ordered BAS Master Sample. pass discrete points function return Halton frame represented ordering .","code":""},{"path":"/reference/point2Frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Halton Boxes around a point resource ordered by BAS Master Sample. — point2Frame","text":"","code":"point2Frame(pts, bb = NULL, base = base::c(2, 3), J = NULL, size = 100)"},{"path":"/reference/point2Frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Halton Boxes around a point resource ordered by BAS Master Sample. — point2Frame","text":"pts Shape file polygon (sp sf) generate boxes . bb Bounding box defines Master Sample. Default BC Marine Master Sample. base Co-prime base Halton sequence J Definition number grid cells Halton frame. size Physical target size Halton boxes (square ish) J NULL.","code":""},{"path":"/reference/point2Frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Halton Boxes around a point resource ordered by BAS Master Sample. — point2Frame","text":"Halton frame represented ordering .","code":""},{"path":"/reference/point2Frame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the Halton Boxes around a point resource ordered by BAS Master Sample. — point2Frame","text":"function first written Paul van Dam-Bates package BASMasterSample.","code":""},{"path":"/reference/point2Frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Halton Boxes around a point resource ordered by BAS Master Sample. — point2Frame","text":"","code":"if (FALSE) { # If you haven't already installed this: install.packages('bcmapsdata', repos='https://bcgov.github.io/drat/') library(bcmapsdata) library(bcmaps) cities <- bcmaps::get_layer(\"bc_cities\") bb <- uc511::BoundingBox(cities, d = 2, FALSE) # For visibility will make boxes 10 km cities.halton <- uc511::point2Frame(pts = cities, bb = bb, size = 10000) plot(sf::st_geometry(cities), pch = 20, cex = 0.1) plot(sf::st_geometry(cities.halton), add= TRUE) # What is the actual area of a Halton box? sf::st_area(cities.halton[1,])/1000^2 }"},{"path":"/reference/rot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a rotation matrix for rotating objects later. — rot","title":"Generate a rotation matrix for rotating objects later. — rot","text":"Generate rotation matrix rotating objects later.","code":""},{"path":"/reference/rot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a rotation matrix for rotating objects later. — rot","text":"","code":"rot(a)"},{"path":"/reference/rot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a rotation matrix for rotating objects later. — rot","text":"radians rotation.","code":""},{"path":"/reference/rot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a rotation matrix for rotating objects later. — rot","text":"Matrix","code":""},{"path":"/reference/rot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a rotation matrix for rotating objects later. — rot","text":"function first written Paul van Dam-Bates package BASMasterSample.","code":""},{"path":"/reference/rot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a rotation matrix for rotating objects later. — rot","text":"","code":"if (FALSE) { rot(pi) }"},{"path":"/reference/rotate.bb.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate Bounding box by theta radians — rotate.bb","title":"Rotate Bounding box by theta radians — rotate.bb","text":"Given shp defined boundary interest, rotate around centroid return rotation centroid attributes. used defining Master Sample bounding box random rotation ensuring new rotated bounding box fits shp.","code":""},{"path":"/reference/rotate.bb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate Bounding box by theta radians — rotate.bb","text":"","code":"rotate.bb(shp, theta)"},{"path":"/reference/rotate.bb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate Bounding box by theta radians — rotate.bb","text":"shp spatial file spatial boundary sample. theta Radians rotation. Positive right pi/2, negative left.","code":""},{"path":"/reference/rotate.bb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate Bounding box by theta radians — rotate.bb","text":"Matrix","code":""},{"path":"/reference/rotate.bb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rotate Bounding box by theta radians — rotate.bb","text":"function first written Paul van Dam-Bates package BASMasterSample.","code":""},{"path":"/reference/rotate.bb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate Bounding box by theta radians — rotate.bb","text":"","code":"if (FALSE) { data(NS_bioregion) bb.new <- uc511::rotate.bb(NS_bioregion, -pi/3) }"},{"path":"/reference/rotate.scale.coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale and rotate points from the unit square to a defined projection. — rotate.scale.coords","title":"Scale and rotate points from the unit square to a defined projection. — rotate.scale.coords","text":"Given coordinates [0,1)x[0,1), shift scale bounding box, rotate given bounding box rotation defined Master Sample.","code":""},{"path":"/reference/rotate.scale.coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale and rotate points from the unit square to a defined projection. — rotate.scale.coords","text":"","code":"rotate.scale.coords(coords, bb, back = TRUE)"},{"path":"/reference/rotate.scale.coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale and rotate points from the unit square to a defined projection. — rotate.scale.coords","text":"coords Output RSHalton() converted spatial surface interest. bb Special shape file defining bounding box attributes centroid rotation. back Boolean whether rotation back original rotated bounding box.","code":""},{"path":"/reference/rotate.scale.coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale and rotate points from the unit square to a defined projection. — rotate.scale.coords","text":"sf spatial points projection defined bb.","code":""},{"path":"/reference/rotate.scale.coords.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scale and rotate points from the unit square to a defined projection. — rotate.scale.coords","text":"function first written Paul van Dam-Bates package BASMasterSample.","code":""},{"path":"/reference/rotate.scale.coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale and rotate points from the unit square to a defined projection. — rotate.scale.coords","text":"","code":"if (FALSE) { pts <- uc511::cppRSHalton(n = 10) bb <- uc511::getBB() pts.shp <- uc511::rotate.scale.coords(coords = pts, bb) }"},{"path":"/reference/rotate.shp.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate a polygon around the centroid of a Master Sample bounding box. — rotate.shp","title":"Rotate a polygon around the centroid of a Master Sample bounding box. — rotate.shp","text":"Given polygon within bounding box Master Sample rotate theta defined bounding box either backwards forwards.","code":""},{"path":"/reference/rotate.shp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate a polygon around the centroid of a Master Sample bounding box. — rotate.shp","text":"","code":"rotate.shp(shp, bb, back = TRUE)"},{"path":"/reference/rotate.shp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate a polygon around the centroid of a Master Sample bounding box. — rotate.shp","text":"shp polygon within sample frame defined spatial features object. bb Special shape file defining bounding box attributes centroid rotation. back Boolean whether rotation back original rotated bounding box.","code":""},{"path":"/reference/rotate.shp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate a polygon around the centroid of a Master Sample bounding box. — rotate.shp","text":"rotated sf spatial object.","code":""},{"path":"/reference/rotate.shp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rotate a polygon around the centroid of a Master Sample bounding box. — rotate.shp","text":"function first written Paul van Dam-Bates package BASMasterSample.","code":""},{"path":"/reference/rotate.shp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate a polygon around the centroid of a Master Sample bounding box. — rotate.shp","text":"","code":"if (FALSE) { data(NS_bioregion) bb <- uc511::getBB() pts.shp <- uc511::rotate.shp(shp = NS_bioregion, bb = bb) }"},{"path":"/reference/shape2Frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Clip a Halton Frame based on the bounding box to the current shape. — shape2Frame","title":"Clip a Halton Frame based on the bounding box to the current shape. — shape2Frame","text":"Take shapefile sf object clips boxes Halton frame around . Size boxes chosen choosing J, number base 2,3 powers subdivide. Intended internal use can useful context.","code":""},{"path":"/reference/shape2Frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clip a Halton Frame based on the bounding box to the current shape. — shape2Frame","text":"","code":"shape2Frame(   shp,   bb = NULL,   base = c(2, 3),   J = c(2, 2),   projstring = NULL,   rotate = FALSE )"},{"path":"/reference/shape2Frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clip a Halton Frame based on the bounding box to the current shape. — shape2Frame","text":"shp shape spatial features object wrap Halton frame. bb Master Sample bounding box. base Co-prime base BAS, change 2,3. J Definition number grid cells Halton frame. projstring Projection master sample , can passed part bounding box. rotate Boolean want rotate shape exporting.","code":""},{"path":"/reference/shape2Frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clip a Halton Frame based on the bounding box to the current shape. — shape2Frame","text":"rotated sf spatial object.","code":""},{"path":"/reference/shape2Frame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clip a Halton Frame based on the bounding box to the current shape. — shape2Frame","text":"function first written Paul van Dam-Bates package BASMasterSample.","code":""},{"path":"/reference/shape2Frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clip a Halton Frame based on the bounding box to the current shape. — shape2Frame","text":"","code":"if (FALSE) { bb <- uc511::getBB() data(NS_bioregion) haltonBoxes <- uc511::shape2Frame(shp = NS_bioregion, J = c(6,4), bb = bb) }"},{"path":"/reference/validate_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate uc511 function parameters. — validate_parameters","title":"Validate uc511 function parameters. — validate_parameters","text":"function used validate parameters passed available uc511 functions.","code":""},{"path":"/reference/validate_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate uc511 function parameters. — validate_parameters","text":"","code":"validate_parameters(parm, parm_value)"},{"path":"/reference/validate_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate uc511 function parameters. — validate_parameters","text":"parm parameter validated. parm_value value parameter validated. Must defined list.","code":""},{"path":"/reference/validate_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate uc511 function parameters. — validate_parameters","text":"Always returns TRUE indicating parameter parsed successfully. parameter fails validation execution terminated using STOP function.","code":""},{"path":"/reference/validate_parameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate uc511 function parameters. — validate_parameters","text":"function written Phil Davies.","code":""}]
